<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scrum on 1000g</title>
    <link>http://1000k.github.io/categories/scrum/</link>
    <description>Recent content in Scrum on 1000g</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 18 Jan 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://1000k.github.io/categories/scrum/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Jutta Eckstein への質問</title>
      <link>http://1000k.github.io/2014/01/19/questions-to-jutta-eckstein/</link>
      <pubDate>Sat, 18 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2014/01/19/questions-to-jutta-eckstein/</guid>
      <description>

&lt;p&gt;Jutta Eckstein 氏の基調講演&lt;a href=&#34;http://blog.1000k.net/2014/01/18/sgt2014-%e5%9f%ba%e8%aa%bf%e8%ac%9b%e6%bc%942/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/2014/01/18/sgt2014-%e5%9f%ba%e8%aa%bf%e8%ac%9b%e6%bc%942/&#39;, &#39;「組織にアジリティを取り入れる – どうすればアジャイルになれる？」&#39;]);&#34; &gt;「組織にアジリティを取り入れる – どうすればアジャイルになれる？」&lt;/a&gt; の後に行われた質疑応答です。&lt;/p&gt;

&lt;h2 id=&#34;変化のために必要な3つのロールが揃わない場合は:a3e13834c7e6dd718e478ab87401cef7&#34;&gt;変化のために必要な3つのロールが揃わない場合は？&lt;/h2&gt;

&lt;p&gt;※3つのロール: プロジェクトリーダー、情熱のあるチェンジ・エージェント、アーキテクト / 技術リーダー&lt;/p&gt;

&lt;p&gt;Q: 変化のために必要な3つのロールが揃わない場合はどうすればいいか？掛け持ちしてもいい？現場では情熱のある人が技術リードを兼任していることも多い。&lt;/p&gt;

&lt;p&gt;A: 技術リードがいなければ組織は当然変化できない。しかし、ロールを兼任すると負担が大きすぎる。一人だけでも始めることは可能だが、仲間は必要。そういう仲間を見つけなければならない。&lt;/p&gt;

&lt;p&gt;なお、「(変化に費やす) 時間が無い」という声をよく耳にする。その場合、とにかくそういう状況を改善すること。「なぜ忙しいのか」を発見し、改善する。「時間がないからテストコードが書けない」なら、何らかのテストを自動で実行できるようにすればいい。&lt;/p&gt;

&lt;h2 id=&#34;どうすれば-離-に達することができる:a3e13834c7e6dd718e478ab87401cef7&#34;&gt;どうすれば「離」に達することができる？&lt;/h2&gt;

&lt;p&gt;Q: いつまで経っても守破離の「守」から抜け出せないケースが多い。アジャイルプラクティスを実施しているだけで「我々はアジャイルだ！」と思っている人が非常に多い。どうやってその段階を抜け出せるか？気づきを与えるにはどうすればいい？&lt;/p&gt;

&lt;p&gt;A: 確かにこれは非常に難しい。たとえば私は趣味のテニスにおいて「守」のレベルを抜け出せないが、プロじゃないので別にいいと思っている。ひょっとしたら周りの人たちも前に進みたいと思っていないのでは？質問してみるといい。&lt;/p&gt;

&lt;p&gt;変化のモデルにおける「アトラクタ」という要素がないか探してみる。次のレベルに行ってみたくなるような要素はないか聞いてみる。全員のふりかえりだけでなく、一対一で聞いてみるのも良い。&lt;/p&gt;

&lt;p&gt;Q: 本人が気づいていない問題を発見して提示してあげてもいい？&lt;/p&gt;

&lt;p&gt;A: 効果的かもしれない。ひょっとしたら (集団でのふりかえりでは話せないような) 個人的な問題が隠れている可能性がある。&lt;/p&gt;

&lt;h2 id=&#34;組織内の別の変化とアジャイル化が衝突していたらどうすればいい:a3e13834c7e6dd718e478ab87401cef7&#34;&gt;組織内の別の変化とアジャイル化が衝突していたらどうすればいい？&lt;/h2&gt;

&lt;p&gt;Q: 「現場では複数の変化が同時に起きていることもある」という話だったが、ある変化と別の変化が衝突するケースもある。例えば「品質が低いのはプロセスが未熟なせいだから、きっちりした監査を導入しよう」という変化と、アジャイルを求める変化は衝突している。この場合はどうすればいい？&lt;/p&gt;

&lt;p&gt;具体的に言うと、全社共通の品質管理チームのボスが指揮統制型で押しつけてくるので困っている。&lt;/p&gt;

&lt;p&gt;A: 大組織では確かにそういうことがある。早い段階でアジャイル開発のプロセスに参加してもらって、要望を聞いてみると良い。ユーザーストーリーを作る手助けをしてやったり、質問をしてみること。「なぜそのプロセスを適用する価値があるのか？ビジネス上の価値はあるのか？」と。また、その質問の意味を知ってもらう。もしボスの言い分が役に立つとわかれば、適用してもいいかもしれない。&lt;/p&gt;

&lt;p&gt;まずは要求を確立すること。本当は何が必要なのかを聞き出すと良い。&lt;/p&gt;

&lt;p&gt;重要なポイントは、チームがその人に対してどのような態度をとるべきかということ。彼は利害関係者である。これまでの議論のレビュー結果を示すなどして、話し合いを続ける。恐らく時間をかける必要があるだろう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SGT2014 基調講演2 「組織にアジリティを取り入れる – どうすればアジャイルになれる？」</title>
      <link>http://1000k.github.io/2014/01/18/sgt2014-keynote2/</link>
      <pubDate>Sat, 18 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2014/01/18/sgt2014-keynote2/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jutta_eckstein-300x198.jpg&#34; alt=&#34;Jutta Eckstein&#34; width=&#34;300&#34; height=&#34;198&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/2014/01/17/sgt2014-%e5%9f%ba%e8%aa%bf%e8%ac%9b%e6%bc%94%e3%80%8c%e3%82%a8%e3%83%b3%e3%82%bf%e3%83%bc%e3%83%97%e3%83%a9%e3%82%a4%e3%82%ba%e3%83%bb%e3%82%b9%e3%82%af%e3%83%a9%e3%83%a0-%e4%bc%81%e6%a5%ad%e6%b4%bb/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/2014/01/17/sgt2014-%e5%9f%ba%e8%aa%bf%e8%ac%9b%e6%bc%94%e3%80%8c%e3%82%a8%e3%83%b3%e3%82%bf%e3%83%bc%e3%83%97%e3%83%a9%e3%82%a4%e3%82%ba%e3%83%bb%e3%82%b9%e3%82%af%e3%83%a9%e3%83%a0-%e4%bc%81%e6%a5%ad%e6%b4%bb/&#39;, &#39;1日目の基調講演&#39;]);&#34; &gt;1日目の基調講演&lt;/a&gt; に続き、2日目の基調講演もメモします。&lt;/p&gt;

&lt;p&gt;スピーカーの &lt;a href=&#34;http://www.jeckstein.com/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.jeckstein.com/&#39;, &#39;Jutta Eckstein 氏&#39;]);&#34; &gt;Jutta Eckstein 氏&lt;/a&gt;はもともと教師であり、その後 IT 業界に入って製品開発を通じてアジャイルプロセスを身につけました。今回の講義では、アジャイルを組織に導入する方法と変化のモデルについて、明晰な分析と的確なアドバイスをされていました。&lt;/p&gt;

&lt;h2 id=&#34;アジャイルを組織に導入するための2つの典型的なアプローチ:c795c54138722eda973de47e1a73c007&#34;&gt;アジャイルを組織に導入するための2つの典型的なアプローチ&lt;/h2&gt;

&lt;h3 id=&#34;ゲリラ型:c795c54138722eda973de47e1a73c007&#34;&gt;ゲリラ型&lt;/h3&gt;

&lt;p&gt;自分でこっそりプロジェクトをアジャイルプロセスで回す方法。成功した後に「実はアジャイルなやり方でした」とネタばらしすることで、実績と共に導入を促すことができる。(Mike Beedle が初めてスクラムを実践した時と同じ方法)&lt;/p&gt;

&lt;p&gt;このやり方は、マネジメント層が関与しないと成功しづらい。出来る限り顧客と PO を巻き込むようにしよう。&lt;/p&gt;

&lt;h3 id=&#34;最高司令型-supreme-command:c795c54138722eda973de47e1a73c007&#34;&gt;最高司令型 (Supreme Command)&lt;/h3&gt;

&lt;p&gt;組織上層部からトップダウンで「アジャイルをやろう」と命令して実施する方法。&lt;/p&gt;

&lt;p&gt;ボトムアップで広める場合と比べると、組織全体でオープンにやれるという点ではやりやすいが、一方で以下の難点もある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;役割、組織、構造が限定されてしまうことが多い。&lt;/li&gt;
&lt;li&gt;チーム自身がやり方を決めるわけでは無いので、自己組織化が難しい。アジャイルマインドと矛盾する。&lt;/li&gt;
&lt;li&gt;管理職が権力を発揮すると、開発者が考える透明性に対してケチが入りやすく、信頼が確立しづらい。&lt;/li&gt;
&lt;li&gt;開発のプラクティスを強制されることが多い。強制されたものは維持しづらい。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いずれの場合でも、何よりまず全員が参加すること。特にふりかえり。&lt;/p&gt;

&lt;p&gt;アジャイルに移行すると変化が起きる。本当に変化するのは個人。&lt;/p&gt;

&lt;h2 id=&#34;変化のモデル:c795c54138722eda973de47e1a73c007&#34;&gt;変化のモデル&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.mindtools.com/pages/article/newPPM_96.htm&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.mindtools.com/pages/article/newPPM_96.htm&#39;, &#39;Elisabeth Kübler-Ross モデル&#39;]);&#34; &gt;Elisabeth Kübler-Ross モデル&lt;/a&gt; と &lt;a href=&#34;http://stevenmsmith.com/ar-satir-change-model/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://stevenmsmith.com/ar-satir-change-model/&#39;, &#39;Virginia Satir モデル&#39;]);&#34; &gt;Virginia Satir モデル&lt;/a&gt; がある。後者は &lt;a href=&#34;http://www.amazon.co.jp/gp/product/462108786X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=462108786X&amp;linkCode=as2&amp;tag=1000k-22&amp;quot;&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.amazon.co.jp/gp/product/462108786X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=462108786X&amp;linkCode=as2&amp;tag=1000k-22&amp;quot;&#39;, &#39;『Fearless Change アジャイルに効く アイデアを組織に広めるための48のパターン』&#39;]);&#34; &gt;『Fearless Change アジャイルに効く アイデアを組織に広めるための48のパターン』&lt;/a&gt; に素晴らしい解説がある。&lt;/p&gt;

&lt;h3 id=&#34;アジャイル導入直後に時間と共に起きること:c795c54138722eda973de47e1a73c007&#34;&gt;アジャイル導入直後に時間と共に起きること&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;まず混沌とする。多くの人は放棄したくなる。&lt;/li&gt;
&lt;li&gt;時間と共に「やっぱりあの考えは使えるんじゃないか」という別の見方ができるようになり、良さに気付く。&lt;/li&gt;
&lt;li&gt;うまくいけば、新しい考えが受け入れられ定着する。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;なお、現場は常に変化しており、様々な変化のカーブが同時並行で存在していることも多い。同僚はアジャイル以外でも変化しているかもしれない。同僚がこのカーブのどこにいるか特定できれば、適切なサポートができるかもしれない。&lt;/p&gt;

&lt;h3 id=&#34;痛みが変化をサポートする:c795c54138722eda973de47e1a73c007&#34;&gt;痛みが変化をサポートする&lt;/h3&gt;

&lt;p&gt;痛みがある現場 (＝不満があちこちにある職場) の方が変化を受け入れやすい。「もっと良いやり方があれば試したい」と思っているから。しかし、実際にやってみると誰も変化を受け入れる体制が整っていないことも多い。&lt;/p&gt;

&lt;p&gt;また、「新しいやり方を導入すれば新しい問題が生じる。何も良くならない。変わらない。」と言う人も多い。&lt;/p&gt;

&lt;p&gt;懐疑的な人が多いのは良いことである。情熱的な人しかいない方が危ない。見落としを多くしたり、必要ないことや組織に害となる考え方もする可能性があるので。&lt;/p&gt;

&lt;p&gt;いずれにせよ変化を始めたら、人々が感じている恐れや希望などの様々なことをふりかえりで確認し、吸収しなければならない。&lt;/p&gt;

&lt;h2 id=&#34;パイロットプロジェクトの落とし穴:c795c54138722eda973de47e1a73c007&#34;&gt;パイロットプロジェクトの落とし穴&lt;/h2&gt;

&lt;p&gt;※パイロットプロジェクト＝試験的にプロジェクトをアジャイルでやること。&lt;/p&gt;

&lt;p&gt;本格的な導入の前に試しに実施されることが多いが、落とし穴がある。意欲のある優れた人材だけを集めたり、リスクの少ない簡単な案件で実施しても、「こんなベストな人材でこんな低リスクな案件なんだから、成功するのは当たり前だ」という評価に終わってしまうことが多い。&lt;/p&gt;

&lt;p&gt;したがってパイロットプロジェクトは、「普通の案件」で、「普通の人達」を、「普通のサイズ」で関与させた方が良い。&lt;/p&gt;

&lt;h2 id=&#34;アジャイル導入スケジュール:c795c54138722eda973de47e1a73c007&#34;&gt;アジャイル導入スケジュール&lt;/h2&gt;

&lt;p&gt;アジャイルを導入するためには以下のことを順序だってやると良い。&lt;/p&gt;

&lt;p&gt;この際、3つのロールが必要になる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プロジェクトリーダー&lt;/li&gt;
&lt;li&gt;情熱のあるチェンジ・エージェント&lt;/li&gt;
&lt;li&gt;アーキテクト / 技術リーダー&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;意識付け:c795c54138722eda973de47e1a73c007&#34;&gt;意識付け&lt;/h3&gt;

&lt;p&gt;会話や読書を行い、アジャイルの進め方を伝播しておく。&lt;/p&gt;

&lt;h3 id=&#34;readiness-enabling-ワークショップ:c795c54138722eda973de47e1a73c007&#34;&gt;Readiness/Enabling ワークショップ&lt;/h3&gt;

&lt;p&gt;アジャイルを実施する際の困難や解決策を議論するワークショップ。以下のことを話し合う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;これまでにやったことは？&lt;/li&gt;
&lt;li&gt;簡単にできることは？&lt;/li&gt;
&lt;li&gt;適用が難しいことは？&lt;/li&gt;
&lt;li&gt;絶対に不可能なことは？ (会社や文化によってはできないこともある)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;難しいことが見つかれば、以下のことも議論する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;それを簡単にするにはどうすればいいか？&lt;/li&gt;
&lt;li&gt;それを変えることで良い効果を得られるか？&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ふりかえり:c795c54138722eda973de47e1a73c007&#34;&gt;ふりかえり&lt;/h3&gt;

&lt;p&gt;プロジェクトで行う。どうやって変化を起こしてきたのかをふりかえり、将来について話し合う。具体的には次のような内容。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;うまくいったことを、どうやって次のプロジェクトに活かすか？&lt;/li&gt;
&lt;li&gt;何が障害になっていたか？何を変えたほうがいいのか？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;継続的に学ぶことで、必然的にアジャイルになってくる。&lt;/p&gt;

&lt;p&gt;重要なのは、アジャイルを実施する人たちがふりかえりのオーナーとなること。外部のコーチがやり方を教えるだけでは意味が無い！現場の人たちが自己組織化し、自分たちで次に何をやるべきか決められるようにならなければならない。&lt;/p&gt;

&lt;p&gt;なお、「グッドプラクティスを集めても意味がない」と言う人がいるが、それは間違い。どこかの組織で成功したことにはヒントがある。&lt;/p&gt;

&lt;h2 id=&#34;学びのステップ-守破離:c795c54138722eda973de47e1a73c007&#34;&gt;学びのステップ: 守破離&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;守: 型を守る。学んだ通りのやり方をやってみる。&lt;/li&gt;
&lt;li&gt;破: ふりかえりによって、意味や目的や効果を確かめる。不必要な部分も見えるかもしれない。&lt;/li&gt;
&lt;li&gt;離: 独自の背景をベースにしたやり方ができるようになる。アジャイルになるためには、全員が「離」のやり方にならなければならない！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特定のレベルに達することができないと物事は変えられないかもしれない。アジャイルを本当に適用するためには、独自のアジャイル手法を考えなければならないかもしれない。&lt;/p&gt;

&lt;h2 id=&#34;トレーニングをカスタマイズする:c795c54138722eda973de47e1a73c007&#34;&gt;トレーニングをカスタマイズする&lt;/h2&gt;

&lt;p&gt;サンドボックスで学んだやり方では、すぐに現場で実践に移せない。カスタマイズしたトレーニングを実施し、現場に則したやり方を習得したほうが早い。例えばデイリースクラムは、実際のプロジェクトですぐに実施して学べる。&lt;/p&gt;

&lt;h2 id=&#34;モニタリングとコーチング:c795c54138722eda973de47e1a73c007&#34;&gt;モニタリングとコーチング&lt;/h2&gt;

&lt;p&gt;アジャイル導入には、社内に高い情熱を持った人が必要。変化の過程では必ずアップダウンがあるため、ドライバーとなるチェンジ・エージェントがいるべき。彼には次のような素質が求められる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;困難を直視できる&lt;/li&gt;
&lt;li&gt;実践もサポートできる&lt;/li&gt;
&lt;li&gt;アジャイルの変化を深く信じている&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なお、組織外部のサポート役 (メンター) がこの役割を担うことはできない。必ず内部に必要。&lt;/p&gt;

&lt;h2 id=&#34;変化を維持するためにやること:c795c54138722eda973de47e1a73c007&#34;&gt;変化を維持するためにやること&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;社内にコーチを作る。&lt;/li&gt;
&lt;li&gt;新人をメンタリングする。&lt;/li&gt;
&lt;li&gt;成功したら（成果を上げたら）必ずお祝いをする。&lt;/li&gt;
&lt;li&gt;絶えず学び続ける。守破離の「離」のレベルに達すること！&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;まとめ:c795c54138722eda973de47e1a73c007&#34;&gt;まとめ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;変化は絶対にスムーズではない。カオスの中を通過する必要がある。&lt;/li&gt;
&lt;li&gt;ふりかえりは気づきを生み出す。継続的な進化につながる。&lt;/li&gt;
&lt;li&gt;ワークショップで全員に気付きを与えよう。&lt;/li&gt;
&lt;li&gt;カスタマイズしたトレーニングで実践力を与えよう。&lt;/li&gt;
&lt;li&gt;チェンジエージェントが全てをサポートする。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;質疑応答でも素晴らしい討議が行われていたので、別ページに書きました。↓&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/2014/01/19/jutta-eckstein-%e3%81%b8%e3%81%ae%e8%b3%aa%e5%95%8f/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/2014/01/19/jutta-eckstein-%e3%81%b8%e3%81%ae%e8%b3%aa%e5%95%8f/&#39;, &#39;Jutta Eckstein への質問&#39;]);&#34; &gt;Jutta Eckstein への質問&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mike Beedle への質問</title>
      <link>http://1000k.github.io/2014/01/17/questions-to-mike-beedle/</link>
      <pubDate>Fri, 17 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2014/01/17/questions-to-mike-beedle/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/?p=1736&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/?p=1736&#39;, &#39;Mike Beedle の基調講演&#39;]);&#34; &gt;Mike Beedle の基調講演&lt;/a&gt;の後の質疑応答では、非常に興味深いディスカッションが行われました。&lt;/p&gt;

&lt;p&gt;幾つかのやりとりをメモします。&lt;/p&gt;

&lt;h2 id=&#34;q-スクラムは素晴らしい考え方だと思うが-弱点は何か:22e56902b6d51e44bdd3ca7927ccaaab&#34;&gt;Q: スクラムは素晴らしい考え方だと思うが、弱点は何か？&lt;/h2&gt;

&lt;p&gt;A: 文化。スクラムをやるためには文化を変えなければならない。誠実な企業体制となり、情報を共有できるようにならねばならない。それができる企業はあまりにも少ない。&lt;/p&gt;

&lt;p&gt;開発現場レベルでスクラムの導入に手こずっているなら、ビジネスレベルではもっと多くの障壁が待ち受けているだろう。これが最大の問題だ。&lt;/p&gt;

&lt;h2 id=&#34;q-文化を変えるには誰を説得すればいい:22e56902b6d51e44bdd3ca7927ccaaab&#34;&gt;Q: 文化を変えるには誰を説得すればいい？&lt;/h2&gt;

&lt;p&gt;A: 中間管理職。現場の人間ならスクラムをやるべきだというのはすぐに理解できるはず。中間管理職は現場や最先端に遅れを取ることをいつも恐れているので、スクラムを理解できないことは無いはずだ。&lt;/p&gt;

&lt;p&gt;ちなみに、ナレッジとマインドをお互い理解できるならば、開発手法はウォーターフォールでも構わない。&lt;/p&gt;

&lt;h2 id=&#34;q-最初にスクラムを実践した時-スクラムを誰も知らなかったはずだが-誰をどうやって説得したのか:22e56902b6d51e44bdd3ca7927ccaaab&#34;&gt;Q: 最初にスクラムを実践した時、スクラムを誰も知らなかったはずだが、誰をどうやって説得したのか？&lt;/h2&gt;

&lt;p&gt;A: 前もってスクラムを隠しプロジェクト (カバープロジェクト) で実践していた。そういうところで成功して実績を立てておき、良い噂を流した。&lt;/p&gt;

&lt;p&gt;今は時代が変わったから、そんなことする必要は無い。&lt;a href=&#34;https://secure.standishgroup.com/reports/reports.php&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;https://secure.standishgroup.com/reports/reports.php&#39;, &#39;Standish Group のレポート&#39;]);&#34; &gt;Standish Group のレポート&lt;/a&gt;を買えば、マネジメントレベルの成功例がたくさん書いてある。あらゆるケーススタディや実績例を学べる。&lt;/p&gt;

&lt;h2 id=&#34;q-エンタープライズスクラムのスプリントの長さはどれくらい:22e56902b6d51e44bdd3ca7927ccaaab&#34;&gt;Q: エンタープライズスクラムのスプリントの長さはどれくらい？&lt;/h2&gt;

&lt;p&gt;A: 通常のスクラムと変わらない。Salesforce は1日おきにミーティングを行い、4週間のスプリントを回している。デイリースクラムに人を集めるのが難しいかもしれないが、とにかく適切な人を参加させること。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SGT2014 基調講演「エンタープライズ・スクラム: 企業活動にスクラムを」</title>
      <link>http://1000k.github.io/2014/01/17/sgt2014-keynote1/</link>
      <pubDate>Fri, 17 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2014/01/17/sgt2014-keynote1/</guid>
      <description>

&lt;p&gt;1/14～1/15にかけて行われた &lt;a href=&#34;http://scrumgatheringtokyo.org/2014/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://scrumgatheringtokyo.org/2014/&#39;, &#39;Regional Scrum Gathering Tokyo 2014&#39;]);&#34; &gt;Regional Scrum Gathering Tokyo 2014&lt;/a&gt; に参加してきました。素晴らしいアイディアを数多く得ることができました。&lt;/p&gt;

&lt;p&gt;自分の知識の整理も兼ねて、その幾つかを共有します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/mike_beedle_and_1000kei.jpg&#34; alt=&#34;Mike Beedle と記念写真&#34; width=&#34;400&#34; height=&#34;327&#34; /&gt;&lt;/p&gt;

&lt;p&gt;(↑Mike Beedle と撮った記念写真)&lt;/p&gt;

&lt;p&gt;まずは1日目に行われた、&lt;a href=&#34;http://www.scrumalliance.org/community/profile/mbeedle&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.scrumalliance.org/community/profile/mbeedle&#39;, &#39;Mike Beedle&#39;]);&#34; &gt;Mike Beedle&lt;/a&gt; 氏による基調講演です。&lt;/p&gt;

&lt;p&gt;Mike は2001年から &lt;a href=&#34;http://www.newgovernance.com/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.newgovernance.com/&#39;, &#39;New Governanace 社&#39;]);&#34; &gt;New Governanace 社&lt;/a&gt; の CEO としてエンタープライズスクラムを実践しており、全てのビジネスプロセスをスクラムで実践しています。講演ではその効果とやり方を解説されました。&lt;/p&gt;

&lt;p&gt;以下に印象に残ったフレーズをメモしておきます。&lt;/p&gt;

&lt;h2 id=&#34;金言と苦言:c4a84ae4001768191e1418635d0eceeb&#34;&gt;金言と苦言&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;「唯一変わらないのは、変わること、変わり続けること、変わることは避けられないことである。これが今の社会を支配している要因なのだ。」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;#8212; アイザック・アシモフ&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「&lt;a href=&#34;http://www.quotes.net/quote/8532&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.quotes.net/quote/8532&#39;, &#39;必ずしも変わる必要はない。生き残ることは強制ではないから&#39;]);&#34; &gt;必ずしも変わる必要はない。生き残ることは強制ではないから&lt;/a&gt;」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;#8212; エドワード・デミング&lt;/p&gt;

&lt;h2 id=&#34;売上の大半は新製品から生まれている:c4a84ae4001768191e1418635d0eceeb&#34;&gt;売上の大半は新製品から生まれている&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.prod-dev.com/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.prod-dev.com/&#39;, &#39;Product Development Institute Inc.&#39;]);&#34; &gt;Product Development Institute Inc.&lt;/a&gt; (プロダクト開発のコンサル会社) が&lt;a href=&#34;http://www.stage-gate.net/downloads/working_papers/wp_32.pdf&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;,&#39;download&#39;,&#39;http://www.stage-gate.net/downloads/working_papers/wp_32.pdf&#39;]);&#34; &gt;2012年に発表したレポート&lt;/a&gt; によると、ビジネスの利益の比率は驚くべき結果となっている。&lt;/p&gt;

&lt;p&gt;平均すると、3年以内に作った新製品が売上の27.5%を占めている。トップ20%企業ではその割合は38%になり、利益の42.4%が新製品から得られている。さらにトップ20%企業の「5年間の新製品からの利益率」を見ると、収入と利益のほぼ70%は新製品から生まれている。&lt;/p&gt;

&lt;p&gt;つまり、現代では売上の多くは新製品から生まれている。逆に言うと、新製品が生み出せない場合は利益が確保できない。&lt;/p&gt;

&lt;h2 id=&#34;スクラムは会社の素早い変革を可能にする:c4a84ae4001768191e1418635d0eceeb&#34;&gt;スクラムは会社の素早い変革を可能にする&lt;/h2&gt;

&lt;p&gt;勝者はイノベーションを、より速く、より効率的に生み出している。利益と収入は、イノベーションの速度と効率性と柔軟性に直接リンクしている。Nokia, Motorola などはこの点で成功できなかった。&lt;/p&gt;

&lt;p&gt;スクラムは高い利益を得るための、素早い変革を可能にする方法である。&lt;/p&gt;

&lt;h2 id=&#34;エンタープライズスクラムとは:c4a84ae4001768191e1418635d0eceeb&#34;&gt;エンタープライズスクラムとは？&lt;/h2&gt;

&lt;p&gt;パラメータ化されたスクラムの包括的な応用。様々なビジネス環境で利用できる。&lt;/p&gt;

&lt;p&gt;1993年に Jeff Sutherland が組織パターン (by Jimm Coplien) と包摂アーキテクチャ (by Rod Brooks) を組み合わせて作り、実践した。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.mountaingoatsoftware.com/blog/agile-succeeds-three-times-more-often-than-waterfall&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.mountaingoatsoftware.com/blog/agile-succeeds-three-times-more-often-than-waterfall&#39;, &#39;2012年に Standish Group が発表した The CHAOS Manifesto&#39;]);&#34; &gt;2012年に Standish Group が発表した The CHAOS Manifesto&lt;/a&gt;を見ると、「プロジェクトの成功率」は、ウォーターフォールが14%なのに対して、アジャイルプロジェクトでは42%に達している。&lt;/p&gt;

&lt;p&gt;伝統的な手法では分割されていた多くのプロセス (戦略設定、マーケティング、製品開発、フィードバック等)は、スクラム(&lt;a href=&#34;http://www.researchgate.net/publication/4231052_Future_of_scrum_parallel_pipelining_of_sprints_in_complex_projects/file/504635217707db28aa.pdf&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;,&#39;download&#39;,&#39;http://www.researchgate.net/publication/4231052_Future_of_scrum_parallel_pipelining_of_sprints_in_complex_projects/file/504635217707db28aa.pdf&#39;]);&#34; &gt;type C Scrum&lt;/a&gt;) においては全てが内包され同時に実行されるようになっている。また、組織体系も「戦略部署」「マーケティング部」という分け方をせず、プロダクト毎に機能横断型なチームを作っていくようになる。&lt;/p&gt;

&lt;p&gt;今は分離して行っているプロセスも、これからの世界ではすべてを同時に行う必要があるのだ。&lt;/p&gt;

&lt;p&gt;エンタープライズスクラムは既に数千の実績がある。IT業界だけでなく、監査、保険、製薬業界など多岐にわたる。&lt;/p&gt;

&lt;h2 id=&#34;スケーリング:c4a84ae4001768191e1418635d0eceeb&#34;&gt;スケーリング&lt;/h2&gt;

&lt;p&gt;スクラムチームは再帰的スクラム (Scrum of Scrum または &lt;a href=&#34;http://www.scrumalliance.org/system/slides/52/original/Scrumbrella%20-%20Scaling%20Scrum.pdf?1319033124&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.scrumalliance.org/system/slides/52/original/Scrumbrella%20-%20Scaling%20Scrum.pdf?1319033124&#39;, &#39;Scrumbrella&#39;]);&#34; &gt;Scrumbrella&lt;/a&gt;) によってスケールする。&lt;/p&gt;

&lt;p&gt;スクラムチームが増えたら、階層バックログを作る。上位のバックログアイテムを個々のチームにアサインし、それぞれのチームでそれをブレークダウンしたバックログを作る。デイリースクラム等で同期を忘れずに行うこと。&lt;/p&gt;

&lt;p&gt;入れ子の改善サイクルを使って、常に改善すること。具体的には、年単位、四半期単位、月単位、週単位のふりかえりを行う。&lt;/p&gt;

&lt;p&gt;リリース計画作りには大部屋 (関係者一同が同じ空間に集う) が有効だが、チームの人数が増えると困難になる。従って、ハイレベルリリース計画とローレベル計画に分けて、必要な人だけで行うようにすると良い。&lt;/p&gt;

&lt;p&gt;計画ができた後の見積もり方法は、ただのスクラムと同じ。&lt;/p&gt;

&lt;p&gt;なお、ベロシティはチームごとのローカルベロシティと、全チーム合計のグローバルベロシティの2つを測定すること。この2つのベロシティを使って、スプリント毎に納期とスコープの再見積もりを行う。&lt;/p&gt;

&lt;h2 id=&#34;大胆な予言:c4a84ae4001768191e1418635d0eceeb&#34;&gt;大胆な予言&lt;/h2&gt;

&lt;p&gt;エンタープライズスクラムは、2020年までにデファクトスタンダードになり、Global 5000 企業の80%が採用するだろう。これは数年前から Jeff と野中郁次郎が述べている。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;密度が非常に高い講演でした。特に印象に残ったのは「5年間の新製品が売上の70%を占めている」という数値です。イノベーションを生み出せない企業が困窮していく根拠がわかりました。&lt;/p&gt;

&lt;p&gt;エンタープライズスクラムについては前知識がありませんでしたが、この講演で概要を掴むことが出来ました。組織は Scrum of Scrum でスケーリングしつつ、多くのパラメータを使ってビジネスを計測し、方針決めに使うようです。このパラメータは発表資料には大量に書いてあるのですが、具体的にいつどうやって使うのかピンと来ませんでした。後で調査してみます。&lt;/p&gt;

&lt;p&gt;なお、講演後の質疑応答も非常に良い内容だったので、&lt;a href=&#34;http://blog.1000k.net/2014/01/17/mike-beedle-%e3%81%b8%e3%81%ae%e8%b3%aa%e5%95%8f/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/2014/01/17/mike-beedle-%e3%81%b8%e3%81%ae%e8%b3%aa%e5%95%8f/&#39;, &#39;Mike Beedle への質問&#39;]);&#34; &gt;Mike Beedle への質問&lt;/a&gt;にまとめました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>私のアジャイルへの取り組みの歴史と現在</title>
      <link>http://1000k.github.io/2014/01/10/my-history-and-now-of-working-with-agile-method/</link>
      <pubDate>Thu, 09 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2014/01/10/my-history-and-now-of-working-with-agile-method/</guid>
      <description>

&lt;p&gt;2010年に初めて XP に出会ってから4年が経過し、少なからず経験値も溜まってきました。今年からは私のノウハウを拙いながらもアウトプットをしていきます。&lt;/p&gt;

&lt;p&gt;手始めに、私がアジャイルと出会った経緯と、これまでの取り組みを整理しておきます。&lt;/p&gt;

&lt;h2 id=&#34;入社-ウォーターフォールを使った開発演習:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;入社 ～ ウォーターフォールを使った開発演習&lt;/h2&gt;

&lt;p&gt;私は今の会社に2009年4月に新卒入社しました。私はホームページ作成のアルバイト等をしていたため、HTML, CSS, JS が多少使えましたが、ほとんど開発能力はありませんでした。&lt;/p&gt;

&lt;p&gt;入社してから1ヶ月間、新人研修としてガチガチのウォーターフォールによる開発演習を行いました。これはひどい体験でした。誰もが意思疎通をできておらず、何度も高価な手戻りコストを支払い、最終的にはごく一部の機能しか実装できませんでした。チームの雰囲気も悪かったです。&lt;/p&gt;

&lt;p&gt;この時に「ウォーターフォールは人間の働き方ではない」と確信しました。見当外れな予測の上に FIX されたスケジュールにチームが振り回され、生きた心地がしませんでした。しかし、当時はほかのやり方を何も知りませんでした。&lt;/p&gt;

&lt;h2 id=&#34;ec-プロジェクトへの参加:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;EC プロジェクトへの参加&lt;/h2&gt;

&lt;p&gt;入社年の9月に EC サービスのプロジェクトに配属されました。当時の私の役割は、社内の企画担当部署の要求を協力会社に伝えるだけの SE でした。&lt;/p&gt;

&lt;p&gt;このプロジェクトは社会人として初めて関わったプロジェクトでしたが、典型的なウォーターフォール型の過ちを犯していました。メインのコミュニケーション手段はメールやスプレッドシートで、あまりに多くの伝達ミスと仕様漏れが発生しました。リリース直前に毎回実装ミスに気付いて急いで修正するものだから、当然のように障害が発生しました。リリースは何度も遅延を繰り返しました。さらに、リリースのたびにデグレードが起き、障害が頻発しました。&lt;/p&gt;

&lt;p&gt;協力会社はベンチャー企業だったのですが、しばしば担当者が変わりました。どうも毎日終電まで残って開発をする日々だったようで、すぐ耐えられなくなって辞めてしまっていたようです。一方で私は企画担当者の意図をブラッシュアップすることもせず、ボンヤリとした要件をただ伝言ゲームで渡すだけのダメエンジニアでした。&lt;/p&gt;

&lt;p&gt;この頃から、「どうしてもっとうまくやれないのか？」「どうしてこんなに遅いのか？」「どうしてこんなに品質が低いのか？」という疑問を強く抱くようになりました。そしてより良いやり方を探すようになりました。&lt;/p&gt;

&lt;h2 id=&#34;xp-との出会い:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;XP との出会い&lt;/h2&gt;

&lt;p&gt;2010年の初頭に &lt;a href=&#34;http://www.amazon.co.jp/gp/product/4873113954/ref=as_li_ss_tl?ie=UTF8&amp;#038;camp=247&amp;#038;creative=7399&amp;#038;creativeASIN=4873113954&amp;#038;linkCode=as2&amp;#038;tag=1000k-22&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.amazon.co.jp/gp/product/4873113954/ref=as_li_ss_tl?ie=UTF8&amp;#038;camp=247&amp;#038;creative=7399&amp;#038;creativeASIN=4873113954&amp;#038;linkCode=as2&amp;#038;tag=1000k-22&#39;, &#39;『アート・オブ・アジャイル デベロップメント ―組織を成功に導くエクストリームプログラミング』&#39;]);&#34; &gt;『アート・オブ・アジャイル デベロップメント ―組織を成功に導くエクストリームプログラミング』&lt;/a&gt; に出会い、初めてアジャイルプロセスを学びました。この本を読んだ時の感動は今も覚えています。プロジェクトを改善するための具体的な手法がいくつも提示され、そのアイディアに希望を見出しました。&lt;/p&gt;

&lt;p&gt;しかしこの頃はまだ、技術的にも社会人的にも未熟で、周囲にこのアイディアの素晴らしさをうまく伝えることができませんでした。そのため、まずは個人でできることを実践し、その効果を実証することにしました。&lt;/p&gt;

&lt;p&gt;この頃にバージョン管理、テスト駆動開発、リファクタリング、継続的インテグレーションなどの基礎スキルを習得しました。私の会社には100人以上エンジニアがいますが、当時はこうしたことを誰もやっていなかったようです。協力会社もやっていませんでした。&lt;/p&gt;

&lt;h2 id=&#34;初めての-xp-チーム-そして大失敗:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;初めての XP チーム、そして大失敗&lt;/h2&gt;

&lt;p&gt;2010年の終盤に、社内システムの開発プロジェクトのチームリーダーに任命されました。当時の所属部署の一番偉い人が要望を出し、私を含む同期4名が開発チームとしてそれを実装しました。&lt;/p&gt;

&lt;p&gt;この時、私は初めて XP をチームで実践しました。が、全くうまくいかず、最終的にこの案件は雲散霧消しました。&lt;/p&gt;

&lt;p&gt;失敗の原因はいくつもありました。&lt;/p&gt;

&lt;p&gt;まず、私以外のメンバーが誰もテスト駆動開発のスキルを持っておらず、継続的なリリースが全くうまくいきませんでした。私は開発と要件整理に手一杯で、スキルを伝播させる余裕がありませんでした。&lt;/p&gt;

&lt;p&gt;また、要望を出す側は一番偉い人1人だけでいいはずなのに、スケジュールの都合でほとんどミーティングに現れず、別の管理職6名が代わりに窓口になるという歪な体制になっていました。本当に欲しい要件が何なのか全くわからず、作ってデモするたびにリジェクトされました。&lt;/p&gt;

&lt;p&gt;この経験により、今となっては当たり前な以下のことを痛感しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;前もって正しい知識を学習しないと、誰も実践できない。&lt;/li&gt;
&lt;li&gt;知識やスキルの習得にはコストがかかる。&lt;/li&gt;
&lt;li&gt;「素晴らしいアイディア」を実践するのは難しい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ec-サービスの規模縮小-内製化-そして-ひとりスクラム-の開始:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;EC サービスの規模縮小、内製化、そして「ひとりスクラム」の開始&lt;/h2&gt;

&lt;p&gt;本業の EC サービスは十分な売上が上がらず、結局2012年1月には主要な店舗がクローズされました。しかし一部の店舗が残っていたため、システムは存続することになりました。 (この時点でプロジェクトの失敗は明らかだったのだから、システムごと廃棄するべきだったと思います)&lt;/p&gt;

&lt;p&gt;規模と予算が縮小され、新規の開発要件が激減したため、協力会社との連携を解消して私が1人で開発・運用を担当することになりました。しかしこれは凄まじい苦行でした。&lt;/p&gt;

&lt;p&gt;まず、システムは先述の通りつぎはぎだらけの非常に低品質なものでした。自動テストケースも無く、オブジェクト志向もまともに実践できていないメチャクチャなコードで、修正が非常に困難でした。バグも非常に多く、課金ミスやサービス障害が頻発していました。&lt;/p&gt;

&lt;p&gt;課金と個人情報を取り扱うシステムのため、いい加減なコーディングによるミスは許されません。なぜ協力会社の人々がすぐに退職していたのかすぐに理解しました。このままではシステムに殺されると思いました。&lt;/p&gt;

&lt;p&gt;そこで私は、当時強く関心を持っていたスクラムを採用し、一人で実践することにしました。これによってやるべきことの明確化と継続的な改善ができると考えたからです。&lt;/p&gt;

&lt;p&gt;具体的には以下のように実践しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不具合リストを作成し、プロダクト・バックログに並べる。&lt;/li&gt;
&lt;li&gt;2週間毎にふりかえり (レトロスペクティブ) を実践する。&lt;/li&gt;
&lt;li&gt;不具合修正の際には必ず自動テストケースを導入し、手動テストを行わないようにする。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この方法はうまくいきました。修正した部分は自動テストで保護され、確実に品質が改善できるようになりました。&lt;/p&gt;

&lt;p&gt;この時私の支えになっていた書籍を2冊紹介します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4798116831/ref=as_li_ss_tl?ie=UTF8&amp;#038;camp=247&amp;#038;creative=7399&amp;#038;creativeASIN=4798116831&amp;#038;linkCode=as2&amp;#038;tag=1000k-22&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.amazon.co.jp/gp/product/4798116831/ref=as_li_ss_tl?ie=UTF8&amp;#038;camp=247&amp;#038;creative=7399&amp;#038;creativeASIN=4798116831&amp;#038;linkCode=as2&amp;#038;tag=1000k-22&#39;, &#39;レガシーコード改善ガイド&#39;]);&#34; &gt;レガシーコード改善ガイド&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;自動テストの無いシステムを、いかに安全に自動テスト可能にするかを学びました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4274066983/ref=as_li_ss_tl?ie=UTF8&amp;#038;camp=247&amp;#038;creative=7399&amp;#038;creativeASIN=4274066983&amp;#038;linkCode=as2&amp;#038;tag=1000k-22&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.amazon.co.jp/gp/product/4274066983/ref=as_li_ss_tl?ie=UTF8&amp;#038;camp=247&amp;#038;creative=7399&amp;#038;creativeASIN=4274066983&amp;#038;linkCode=as2&amp;#038;tag=1000k-22&#39;, &#39;アジャイルレトロスペクティブズ　強いチームを育てる「ふりかえり」の手引き&#39;]);&#34; &gt;アジャイルレトロスペクティブズ　強いチームを育てる「ふりかえり」の手引き&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;2週間毎のふりかえりの効果を最大化するのに非常に役立ちました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;認定スクラムマスターの取得:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;認定スクラムマスターの取得&lt;/h2&gt;

&lt;p&gt;EC システムの内製化には心を病む寸前まで追い詰められましたが、報酬として技術力の向上とスクラムの習得に繋がりました。&lt;/p&gt;

&lt;p&gt;ふと社内を見渡すと、私よりひどいプロジェクトが無数に存在していることに気付きました。多くのプロジェクトは十分な利益を上げておらず、その改善策を考える暇も無いほど「価値の無い」タスクに追い立てられていました。実際会社全体は落ち目で、成長が止まっていました。&lt;/p&gt;

&lt;p&gt;この頃には私は、もっと面白い仕事ができる会社に行こうと考えていました。ある程度エンジニアとしてのスキルが (大したレベルでは無いですが) 身に付いており、まだ20代でもあり、こんな顧客価値に繋がらないプロジェクトにいつまでも関わっていても将来に繋がらないと思っていました。&lt;/p&gt;

&lt;p&gt;が、ふと立ち止まって考えました。スクラムを使って社内を改善することはできないか？スクラムは本当に組織レベルでも効果があるのか？こういう状況だからこそ試せるのではないか？と。&lt;/p&gt;

&lt;p&gt;私は社内にスクラムを広める活動を始めることを決意しました。&lt;/p&gt;

&lt;p&gt;私の会社は典型的なピラミッド構造の会社であり、若手エンジニアが好き勝手言っても上長の耳には届かないことを知っていました。そこで、少しでも肩書があった方が有利だろうと思い、2013年6月に認定スクラムマスターになりました。結果としてこの肩書は説得力の向上に若干良い効果があったと思います。&lt;/p&gt;

&lt;h2 id=&#34;社内ワークショップの開始:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;社内ワークショップの開始&lt;/h2&gt;

&lt;p&gt;2013年7月に、スクラムワーキンググループを立ち上げました。過去に社内で3ヶ月だけスクラムを実践していたプロジェクトのメンバー2人を誘いました。月1のワークショップを実践し、アジャイルプロセスを伝播し始めました。この取り組みは現在も続いています。&lt;/p&gt;

&lt;p&gt;そのうちインターンシップ演習や新人開発研修のコーチを担当するようになりました。2013年12月には新人がスクラムチームを作って新しい Web サービスを作るという研修を実践したのですが、これまでに見たことのない成果を上げていました。恐らく従来のやり方しか知らない社員では3ヶ月かかっても完成できないであろうサービスを作り上げていました。これもまた、スクラムの効果を確信するきっかけになりました。&lt;/p&gt;

&lt;h2 id=&#34;そして現在:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;そして現在&lt;/h2&gt;

&lt;p&gt;現在は定期的に &lt;a href=&#34;https://sites.google.com/site/spostudy/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;https://sites.google.com/site/spostudy/&#39;, &#39;POStudy (プロダクトオーナーシップ勉強会)&#39;]);&#34; &gt;POStudy (プロダクトオーナーシップ勉強会)&lt;/a&gt; などの勉強会に参加しつつ、より良いやり方の学習と検証を続けています。&lt;/p&gt;

&lt;p&gt;まだ十分に管理職クラスを巻き込めておらず、会社全体では依然として古いやり方が続いています。それでも、徐々にカンバンを社内で見るようになったり、アジャイルプラクティスが実践されている様子を見かけるようになってきました。&lt;/p&gt;

&lt;h2 id=&#34;まとめ:b9d62283c9c366b7e75ef176c55eddeb&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;長々と書きましたが、私がアジャイルプラクティスの啓蒙活動を初めてまだ半年しか経っていません。&lt;/p&gt;

&lt;p&gt;今後も活動を続け、多くの人がハッピーになる仕事ができる環境を作っていくつもりです。&lt;/p&gt;

&lt;p&gt;今年からはノウハウをアウトプットしつつ、外部の人々と頻繁に情報交換できるようにしたいと考えています。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>書評: Software in 30 Days スクラムによるアジャイルな組織変革”成功”ガイド</title>
      <link>http://1000k.github.io/2013/07/13/book-review-software-in-30-days/</link>
      <pubDate>Fri, 12 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/07/13/book-review-software-in-30-days/</guid>
      <description>&lt;iframe src=&#34;http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=1000k-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4048912364&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;Scrum を現場に適用したいと考えているマネージャー層、およびそうしたマネージャー層を取り込みたいと考えている人ならば必読の書籍です。&lt;/p&gt;

&lt;p&gt;この書籍は以下のようなストーリーで構成されています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;なぜ従来の方法 (ウォーターフォール) が機能不全に陥りやすいのか。&lt;/li&gt;
&lt;li&gt;なぜ Scrum が従来の方法より成功しやすいのか。&lt;/li&gt;
&lt;li&gt;Scrum をどこから始めればよいか。&lt;/li&gt;
&lt;li&gt;Scrum を企業レベルで展開するにはどうすればよいか。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;まず最初に、既存のプロセスが現代の環境に適していない事実と、その原因を語ります。ウォーターフォール型の組織が孕む問題と、古いやり方が現場を悪化させていく現実をいくつも例示します。それはいわゆる「普通の」現場で働いたことのある人なら誰もが納得できるものです。&lt;/p&gt;

&lt;p&gt;続いて、「Scrum とはそうした問題に対処するために生まれてきた」という経緯を説明し、実際にどのようなアイディアを含んでいるのかを説明します。「Scrum は既存のやり方よりうまくいきやすい」という確信を強める一方で、「こうすると失敗する」という事例も忘れず提示します。&lt;/p&gt;

&lt;p&gt;さらに、実際に Scrum を導入したいという読者のために、具体的に Scrum を小さな現場から適用していくやり方 (パイロット) の説明に移っていきます。どんなプロジェクトに、どんなチームで進めれば成功しやすいかを解説します。Scrum の各プラクティスについても非常に具体的に解説します。&lt;/p&gt;

&lt;p&gt;最後に、Scrum を組織全体に適用していく方法に触れます。ここでは組織の壁を壊し、既存の文化を変えていく戦略を語っています。Scrum を提唱し実際に多くの組織に根付かせてきた経験をもつ筆者だけあり、その視点は現実的です。「どんな障害物があり、どう克服していくか？」「いかに効果を数字で評価するか？」等は、自分一人で解決するには非常に難しい問題ですが、ここにも有力な示唆を与えています。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;タイトルにもある通り、この本は組織の変革を成功させるためのガイドです。既存の Scrum プラクティスを体得した上で、それを組織レベルに適用したいと考えるならば、ぜひとも目を通すべき良書です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>書評: Scrum Boot Camp The Book</title>
      <link>http://1000k.github.io/2013/02/28/book-review-scrum-boot-camp-the-book/</link>
      <pubDate>Wed, 27 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/02/28/book-review-scrum-boot-camp-the-book/</guid>
      <description>&lt;div data-role=&#34;amazonjs&#34; data-asin=&#34;4798129712&#34; data-locale=&#34;JP&#34; data-tmpl=&#34;&#34; data-img-size=&#34;&#34; class=&#34;asin_4798129712_JP_ amazonjs_item&#34;&gt;
  &lt;div class=&#34;amazonjs_indicator&#34;&gt;
    &lt;span class=&#34;amazonjs_indicator_img&#34;&gt;&lt;/span&gt;&lt;a class=&#34;amazonjs_indicator_title&#34; href=&#34;#&#34;&gt;SCRUM BOOT CAMP THE BOOK&lt;/a&gt;&lt;span class=&#34;amazonjs_indicator_footer&#34;&gt;&lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;大変良い本でした。&lt;/p&gt;

&lt;p&gt;これまで&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4274068560/ref=as_li_ss_tl?ie=UTF8&amp;#038;camp=247&amp;#038;creative=7399&amp;#038;creativeASIN=4274068560&amp;#038;linkCode=as2&amp;#038;tag=1000k-22&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.amazon.co.jp/gp/product/4274068560/ref=as_li_ss_tl?ie=UTF8&amp;#038;camp=247&amp;#038;creative=7399&amp;#038;creativeASIN=4274068560&amp;#038;linkCode=as2&amp;#038;tag=1000k-22&#39;, &#39;アジャイルサムライ−達人開発者への道−&#39;]);&#34; &gt;アジャイルサムライ−達人開発者への道−&lt;/a&gt;&lt;img src=&#34;http://www.assoc-amazon.jp/e/ir?t=1000k-22&amp;#038;l=as2&amp;#038;o=9&amp;#038;a=4274068560&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;などのガイドブックでプラクティスやマインドセットは学んではいたものの、実際の現場でどのように使われるかのイメージが曖昧でした。が、この本でかなり具体化することができました。&lt;/p&gt;

&lt;p&gt;この本では、次々に起こるプロジェクトの問題に対して、Scrum チームがどう考えどう対処していくべきかを解説しています。その問題というのは実際の現場でも非常によく起きるもので、どれも大変共感できるものです。&lt;/p&gt;

&lt;p&gt;たとえば、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;見積もりをする時何を考えればいいか？&lt;/li&gt;
&lt;li&gt;プロダクトオーナーがいない時どうするか？&lt;/li&gt;
&lt;li&gt;必要不可欠な機能が突然増えた時、何を、どのように調整するか？&lt;/li&gt;
&lt;li&gt;機能横断的なチームを作るにはどのようにメンバーを集めればいいか？どんなチームは危険か？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等々。現場で一から学んでいくのはなかなか難しいものばかりです。プロダクトオーナーやスクラムマスターとして多くの実践を積まれている執筆陣ならではの、良質なノウハウが詰め込まれています。&lt;/p&gt;

&lt;p&gt;Scrumの基礎を説明しているパートは全280ページ中40ページほどだけで、これだけでScrumの全体像を学ぶのは難しいかもしれません。ほかのガイドブックで基礎を学んだ後、この本を読むといっそう力が付くでしょう。&lt;/p&gt;

&lt;p&gt;ちなみに、私も Scrum の学習中は著者の一人&lt;a href=&#34;http://www.ryuzee.com/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.ryuzee.com/&#39;, &#39;吉羽龍太郎さんのサイト&#39;]);&#34; &gt;吉羽龍太郎さんのサイト&lt;/a&gt;によくお世話になりました。以下に非常に優れたリソースがまとまっていますので、併せて読むとより理解が進むでしょう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ryuzee.com/contents/blog/5043&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.ryuzee.com/contents/blog/5043&#39;, &#39;Agile関連記事総まとめ | Ryuzee.com&#39;]);&#34; &gt;Agile関連記事総まとめ | Ryuzee.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ryuzee.com/contents/blog/5707&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.ryuzee.com/contents/blog/5707&#39;, &#39;Scrumに関する無料の日本語資料のまとめ | Ryuzee.com&#39;]);&#34; &gt;Scrumに関する無料の日本語資料のまとめ | Ryuzee.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Scrum失敗例 楽天の場合</title>
      <link>http://1000k.github.io/2012/05/24/why-scrum-failed-in-rakuten/</link>
      <pubDate>Thu, 24 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2012/05/24/why-scrum-failed-in-rakuten/</guid>
      <description>

&lt;p&gt;楽天のあるプロジェクトが「Scrumをやったもののうまくいかなかった」という経験談をスライドにまとめていました。&lt;/p&gt;

&lt;p&gt;概要と感想を書きます。&lt;/p&gt;

&lt;div style=&#34;width:425px&#34; id=&#34;__ss_13014872&#34;&gt;
  &lt;strong style=&#34;display:block;margin:12px 0 4px&#34;&gt;&lt;a href=&#34;http://www.slideshare.net/TakaoOyobe/20120521-13014872&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.slideshare.net/TakaoOyobe/20120521-13014872&#39;, &#39;私がスクラムをやめた理由 &amp;#8211; 全員スクラムマスター。＠DevLove &amp;#8211;&#39;]);&#34; title=&#34;私がスクラムをやめた理由 - 全員スクラムマスター。＠DevLove -&#34; target=&#34;_blank&#34;&gt;私がスクラムをやめた理由 &amp;#8211; 全員スクラムマスター。＠DevLove &amp;#8211;&lt;/a&gt;&lt;/strong&gt; 
  
  &lt;div style=&#34;padding:5px 0 12px&#34;&gt;
    View more &lt;a href=&#34;http://www.slideshare.net/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.slideshare.net/&#39;, &#39;presentations&#39;]);&#34; target=&#34;_blank&#34;&gt;presentations&lt;/a&gt; from &lt;a href=&#34;http://www.slideshare.net/TakaoOyobe&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.slideshare.net/TakaoOyobe&#39;, &#39;Takao Oyobe&#39;]);&#34; target=&#34;_blank&#34;&gt;Takao Oyobe&lt;/a&gt;
  &lt;/div&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;スライド概要:62eb8597331ebd06c39f006707b078a1&#34;&gt;スライド概要&lt;/h2&gt;

&lt;p&gt;Scrumを導入したが、下記の問題により挫折。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;人が選べない&lt;/li&gt;
&lt;li&gt;プラクティスに従ってくれない人がいる&lt;/li&gt;
&lt;li&gt;切符を切る人（正しくバスに乗っているか確かめる人）がいない&lt;/li&gt;
&lt;li&gt;役割は決められない&lt;/li&gt;
&lt;li&gt;結局新たな滝（ウォーターフォール）ができただけ&lt;/li&gt;
&lt;li&gt;教育が難しい&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;スライドを見て思ったこと:62eb8597331ebd06c39f006707b078a1&#34;&gt;スライドを見て思ったこと&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;根本的にスクラムマスターの権限が弱すぎる？

&lt;ul&gt;
&lt;li&gt;プラクティスを周知し、従わせる&lt;/li&gt;
&lt;li&gt;合わない場合はプラクティスを軽量化するか捨てる&lt;/li&gt;
&lt;li&gt;どうしても従わないメンバーがいる場合、入れ替えられる機構が必要&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;結局スモールウォーターフォールになるのは自分も経験済み。恐らく「スモールリリース」に誤解

&lt;ul&gt;
&lt;li&gt;1スプリント毎に必ず成果をコミットする（タイムボックス化）&lt;/li&gt;
&lt;li&gt;優先度の高いストーリーから消化する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;メンバーをバスに乗せるのは本当に難しい

&lt;ul&gt;
&lt;li&gt;「アジャイル開発のプラクティスをやれば良くなる」という自発的な動機がなければ、大量のプラクティスの学習で脱落する人が続出しそう&lt;/li&gt;
&lt;li&gt;スクラムマスターはここでも継続的・漸進的な推進をする必要がありそう&lt;/li&gt;
&lt;li&gt;最初の2～4スプリントはふつうスパイクや調査の期間なので、ここで徐々に教育すれば良さそう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;総じて、メンバーをプラクティスに従わせるのに苦労している印象を受けました。&lt;/p&gt;

&lt;p&gt;アジャイル開発には自律的なプラクティスが多く、自ら行ってもらえるようにならないとうまく回りません。&lt;/p&gt;

&lt;p&gt;メリットが実感できればもっと積極的になってくれるかもしれませんが。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.ryuzee.com/contents/blog/?s=%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.ryuzee.com/contents/blog/?s=%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97&#39;, &#39;プラクティスの意義を実感するためのワークショップ&#39;]);&#34; title=&#34;ワークショップ | Ryuzee.com&#34;&gt;プラクティスの意義を実感するためのワークショップ&lt;/a&gt;（短時間でできるゲーム）が多数あるので、これをまず体験させるのも効果的でしょう。&lt;/p&gt;

&lt;p&gt;あとこれは私の経験則ですが、開発メンバーの主力がスクラムマスターを兼任すると、開発も指揮も中途半端になるのでオススメしません。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>