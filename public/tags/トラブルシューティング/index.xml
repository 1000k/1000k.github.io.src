<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>トラブルシューティング on 1000g</title>
    <link>http://1000k.github.io/tags/%E3%83%88%E3%83%A9%E3%83%96%E3%83%AB%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/</link>
    <description>Recent content in トラブルシューティング on 1000g</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 03 Jul 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://1000k.github.io/tags/%E3%83%88%E3%83%A9%E3%83%96%E3%83%AB%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Vagrant 1.6.x にアップデートしたら動かなくなった</title>
      <link>http://1000k.github.io/2014/07/03/vagrant-doesnt-work-after-updating-1-6-x/</link>
      <pubDate>Thu, 03 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2014/07/03/vagrant-doesnt-work-after-updating-1-6-x/</guid>
      <description>&lt;p&gt;Windows 環境で Docker が使いたくて Vagrant を 1.5.1 から 1.6.3 にアップグレードしたら、&lt;code&gt;vagrant up&lt;/code&gt; するたびにエラーが出るようになってしましました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vagrant up
Bringing machine &#39;myapp&#39; up with &#39;virtualbox&#39; provider...
==&amp;gt; myapp: Box &#39;myapp&#39; could not be found. Attempting to find and
install...
    myapp: Box Provider: virtualbox
    myapp: Box Version: &amp;gt;= 0
==&amp;gt; myapp: Adding box &#39;myapp&#39; (v0) for provider: virtualbox
    myapp: Downloading: file://C:/static/boxes/CentOS-6.3-x86_64-v2013010
1.box
    myapp: Progress: 8% (Rate: 201M/s, Estimated time remaining: 0:00:02)
    myapp: Progress: 53% (Rate: 203M/s, Estimated time remaining: 0:00:01
    myapp: Progress: 56% (Rate: 108M/s, Estimated time remaining: 0:00:01
    myapp: Progress: 76% (Rate: 103M/s, Estimated time remaining: 0:00:01
    myapp: Progress: 89% (Rate: 91.7M/s, Estimated time remaining: --:--:
    myapp: Progress: 100% (Rate: 85.8M/s, Estimated time remaining: --:--
    myapp:
The box failed to unpackage properly. Please verify that the box
file you&#39;re trying to add is not corrupted and try again. The
output from attempting to unpackage (if any):
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;GitHub の issue レポートにワークアラウンドが見つかりました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mitchellh/vagrant/issues/3674&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;https://github.com/mitchellh/vagrant/issues/3674&#39;, &#39;The executable &amp;#8216;bsdtar&amp;#8217; Vagrant is trying to run was not found in the %PATH% variable · Issue #3674 · mitchellh/vagrant&#39;]);&#34; &gt;The executable &amp;#8216;bsdtar&amp;#8217; Vagrant is trying to run was not found in the %PATH% variable · Issue #3674 · mitchellh/vagrant&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これによると、古いバージョンが入った Windows に 1.6.x をインストールすると、bsdtar (Vagrant Box を解凍するツール？) がなぜかインストールされないそうです。実際に &lt;code&gt;C:\HashiCorp\Vagrant\embedded\gnuwin32\bin&lt;/code&gt; を見てみたところ、&lt;code&gt;bsdtar.exe&lt;/code&gt; は見つからず、&lt;code&gt;libarchive.dll&lt;/code&gt; というファイル1つしかありませんでした。&lt;/p&gt;

&lt;p&gt;そんなわけで以下の手順を行ったところ、無事起動するようになりました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;古い Vagrant をアンインストールする。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c:\HashiCorp\&lt;/code&gt; を削除する。&lt;/li&gt;
&lt;li&gt;再度インストーラーで Vagrant 1.6.3 をインストールする。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;なおスレッドの書き込みによると、コントロールパネルの「プログラムと機能」から「修復」を選んでも直るらしいです。(未検証)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Protractor が動かなくてハマった</title>
      <link>http://1000k.github.io/2014/05/22/protractor-doesnt-work-for-me/</link>
      <pubDate>Thu, 22 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2014/05/22/protractor-doesnt-work-for-me/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/angular/angular-seed&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;https://github.com/angular/angular-seed&#39;, &#39;angular-seed&#39;]);&#34; &gt;angular-seed&lt;/a&gt; を使って Angular.js の開発環境を作成していたのですが、どうにもこうにも e2e テストが動かなくてハマりました。&lt;/p&gt;

&lt;p&gt;エラーメッセージは以下のとおり。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm run protractor

&amp;gt; angular-seed@0.0.0 preprotractor /var/www
&amp;gt; npm run update-webdriver


&amp;gt; angular-seed@0.0.0 preupdate-webdriver /var/www
&amp;gt; npm install


&amp;gt; angular-seed@0.0.0 postinstall /var/www
&amp;gt; bower install


&amp;gt; angular-seed@0.0.0 update-webdriver /var/www
&amp;gt; webdriver-manager update

selenium standalone is up to date.
chromedriver is up to date.

&amp;gt; angular-seed@0.0.0 protractor /var/www
&amp;gt; protractor test/protractor-conf.js


------------------------------------
PID: 2314 (capability: chrome #1)
------------------------------------

Starting selenium standalone server...

events.js:72
        throw er; // Unhandled &#39;error&#39; event
              ^
Error: spawn ENOENT
    at errnoException (child_process.js:998:11)
    at Process.ChildProcess._handle.onexit (child_process.js:789:34)
[launcher] Runner Process Exited With Error Code: 8

npm ERR! angular-seed@0.0.0 protractor: `protractor test/protractor-conf.js`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the angular-seed@0.0.0 protractor script.
npm ERR! This is most likely a problem with the angular-seed package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     protractor test/protractor-conf.js
npm ERR! You can get their info via:
npm ERR!     npm owner ls angular-seed
npm ERR! There is likely additional logging output above.
npm ERR! System Linux 3.13.0-24-generic
npm ERR! command &amp;quot;node&amp;quot; &amp;quot;/usr/bin/npm&amp;quot; &amp;quot;run&amp;quot; &amp;quot;protractor&amp;quot;
npm ERR! cwd /var/www
npm ERR! node -v v0.10.28
npm ERR! npm -v 1.4.10
npm ERR! code ELIFECYCLE
npm ERR!
npm ERR! Additional logging details can be found in:
npm ERR!     /var/www/npm-debug.log
npm ERR! not ok code 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;code ELIFECYCLE&lt;/code&gt; が何を意味しているのかさっぱりわからず途方に暮れていましたが、結局のところ Java に PATH が通っていなかったのが原因だったようです。&lt;/p&gt;

&lt;p&gt;e2e テストは内部で Selenium Standalone Server を呼んでいますが、そこに Java が必要でした。&lt;/p&gt;

&lt;p&gt;単純に OpenJDK をパッケージインストールするだけで解決しました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install openjdk-7-jre-headless
$ java -version
(バージョンが表示されれば PATH が通ってるので OK)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Node.js はデバッグメッセージが雑なことが多いので苦手です。&lt;/p&gt;

&lt;h2 id=&#34;参考:44911033301877b7be87059dd5b5c5f6&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/20188679/how-to-run-protractor/23772014#23772014&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://stackoverflow.com/questions/20188679/how-to-run-protractor/23772014#23772014&#39;, &#39;angularjs &amp;#8211; How to run protractor? &amp;#8211; Stack Overflow&#39;]);&#34; &gt;angularjs &amp;#8211; How to run protractor? &amp;#8211; Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>PHPMD の頭がかなり messy</title>
      <link>http://1000k.github.io/2013/11/26/phpmd-is-messy/</link>
      <pubDate>Tue, 26 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/11/26/phpmd-is-messy/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://phpmd.org/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://phpmd.org/&#39;, &#39;PHPMD (PHP Mess Detector)&#39;]);&#34; &gt;PHPMD (PHP Mess Detector)&lt;/a&gt; は、PHP のコードを静的解析して、潜在的なバグや無意味なブロックを発見してくれるツールです。&lt;/p&gt;

&lt;p&gt;が、しばしば問題ないブロックにもケチをつけてきます。&lt;/p&gt;

&lt;p&gt;たとえばこんなコード。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function setUp() {
    // 警告: Avoid using static access to class &#39;parent&#39; in method &#39;setUp&#39;.
    parent::setUp();

    $this-&amp;gt;Account = ClassRegistry::init(&#39;Account&#39;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;親クラスの setUp() メソッドを呼んだけで、「静的アクセスするな」と怒られます。じゃあどうやってオーバーライドすればいいんだよ、と思います。メンバ定数にアクセスしようと &lt;code&gt;self::&lt;/code&gt; を使っても出ます。オブジェクト指向を否定してんのか。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@SuppressWarnings&lt;/code&gt; アノテーションをクラスの PHPDoc に書くことでこの警告は出なくなりますが、本当に間違った静的アクセスを行っていても無視されるようになってしまいます。困ったもんです。&lt;/p&gt;

&lt;p&gt;ほかにも、if-else を使うと下のような警告を出します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function step() {
    if ($this-&amp;gt;find(&#39;count&#39;) &amp;amp;lt; 1) {
        $this-&amp;gt;foo();
    } else {
        // 警告: The method step uses an else expression. Else is never necessary and you can simplify the code to work without else.
        $this-&amp;gt;bar();
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「else なんて必要ねえよ。else の必要ない書き方しろよ。」と言ってきます。言いたいことはわかりますが、リファクタリングした結果最もメンテナンス性が高くなるなら、if-else 構文を使っても全然問題ないはずです。else を使うだけで警告レベル High で糾弾するのはいかがなものでしょうか。&lt;/p&gt;

&lt;h2 id=&#34;まとめ:fa9ca428d896ab32fcf9e86dc6eea620&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;PHPMD はヒステリー気味なので、レポート結果をあまり深刻に受け取らないようにしましょう。&lt;/p&gt;

&lt;h2 id=&#34;参考:fa9ca428d896ab32fcf9e86dc6eea620&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://phpmd.org/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://phpmd.org/&#39;, &#39;PHPMD &amp;#8211; PHP Mess Detector&#39;]);&#34; &gt;PHPMD &amp;#8211; PHP Mess Detector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/18604179/phpmd-avoid-static-access-to-parent&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://stackoverflow.com/questions/18604179/phpmd-avoid-static-access-to-parent&#39;, &#39;php &amp;#8211; PHPMD avoid static access to parent &amp;#8211; Stack Overflow&#39;]);&#34; &gt;php &amp;#8211; PHPMD avoid static access to parent &amp;#8211; Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins で Git リポジトリの ID と PW をセキュアに保存する方法</title>
      <link>http://1000k.github.io/2013/10/28/how-to-save-id-and-pw-of-git-repository-in-jenkins/</link>
      <pubDate>Mon, 28 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/10/28/how-to-save-id-and-pw-of-git-repository-in-jenkins/</guid>
      <description>

&lt;p&gt;Jenkins から https 接続で認証付きの Git リポジトリを参照する場合、以下のように URL に直接ユーザー名とパスワードを書く必要がありました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://{USERNAME}:{PASSWORD}@foo.com/git/bar.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然 Jenkins の設定ファイルにパスワードがそのまま書かれてしまいます。個人開発ならいいですが、チーム開発では危険すぎます。これをセキュアにしようとすると、.netrc を使ったりするややこしい手順が必要でした。&lt;/p&gt;

&lt;p&gt;ところが、2013年10月22日にリリースされた Git Plugin 2.0 から、Credential Plugin と連携して暗号化したパスワードを保存できるようになったため、大幅に設定が楽になりました。&lt;/p&gt;

&lt;p&gt;以下にそのやり方をメモしておきます。&lt;/p&gt;

&lt;p&gt;リポジトリの URL は &lt;code&gt;https://foo.com/git/bar.git&lt;/code&gt; とします。&lt;/p&gt;

&lt;p&gt;&amp;#8220;Jenkins の管理 &amp;gt; Credentials &amp;gt; Add domain&amp;#8221; をクリックし、Git リポジトリのドメインを入力します。&lt;/p&gt;

&lt;p&gt;Specification の URI スキーマには &lt;code&gt;https&lt;/code&gt; を選択します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_1.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_1.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_1-300x163.png&#34; alt=&#34;jenkins_secure_credientials_1&#34; width=&#34;300&#34; height=&#34;163&#34; class=&#34;alignnone size-medium wp-image-1641&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;続いて、&amp;#8221;Add Credentials&amp;#8221; をクリックし、認証情報入力画面を出します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_2.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_2.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_2-300x71.png&#34; alt=&#34;jenkins_secure_credientials_2&#34; width=&#34;300&#34; height=&#34;71&#34; class=&#34;alignnone size-medium wp-image-1642&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8220;Kind&amp;#8221; は &lt;code&gt;ユーザー名とパスワード&lt;/code&gt; を、&amp;#8221;ユーザー名&amp;#8221; には https 認証のユーザー名を入力します。完了したら &amp;#8220;OK&amp;#8221; をクリック。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_3.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_3.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_3-300x139.png&#34; alt=&#34;jenkins_secure_credientials_3&#34; width=&#34;300&#34; height=&#34;139&#34; class=&#34;alignnone size-medium wp-image-1643&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これで一旦、認証鍵一覧画面に戻されます。引き続き、いま入力したユーザー名をクリック。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_4.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_4.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_4-300x136.png&#34; alt=&#34;jenkins_secure_credientials_4&#34; width=&#34;300&#34; height=&#34;136&#34; class=&#34;alignnone size-medium wp-image-1644&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8220;Update&amp;#8221; をクリック。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_5.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_5.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_5-300x137.png&#34; alt=&#34;jenkins_secure_credientials_5&#34; width=&#34;300&#34; height=&#34;137&#34; class=&#34;alignnone size-medium wp-image-1645&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8220;パスワード&amp;#8221; 欄に認証パスワードを入力し、&amp;#8221;Save&amp;#8221; をクリック。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_6.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_6.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_6-300x134.png&#34; alt=&#34;jenkins_secure_credientials_6&#34; width=&#34;300&#34; height=&#34;134&#34; class=&#34;alignnone size-medium wp-image-1646&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以上で foo.com のリポジトリの認証情報が設定できました。&lt;/p&gt;

&lt;p&gt;あとはプロジェクトの設定画面を開き、&amp;#8221;ソースコード管理システム &amp;gt; Git&amp;#8221; の &amp;#8220;Repository URL&amp;#8221; に &lt;code&gt;https://foo.com/git/bar.git&lt;/code&gt; を、&amp;#8221;Credentials&amp;#8221; に先ほど入力した ID/PW のペアを選択すれば OKです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_7.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_7.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_7-300x242.png&#34; alt=&#34;jenkins_secure_credientials_7&#34; width=&#34;300&#34; height=&#34;242&#34; class=&#34;alignnone size-medium wp-image-1647&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これでプロジェクトをビルド可能になります。&lt;/p&gt;

&lt;h2 id=&#34;git-1-7-1-では認証が通らない:094599a56af5c07d8e54136f1f310fd1&#34;&gt;Git 1.7.1 では認証が通らない？&lt;/h2&gt;

&lt;p&gt;CentOS 6.3 で、EPEL リポジトリから Git をインストールすると 1.7.1 が入りますが、これだとうまく認証が通りませんでした。プロジェクトの設定画面で &amp;#8220;Repository URL&amp;#8221; と &amp;#8220;Credential&amp;#8221; を入力しても、 &lt;code&gt;Error performing command: ls-remote -h&lt;/code&gt; というエラーが出て進めませんでした。&lt;/p&gt;

&lt;p&gt;仕方ないので手動でソースから Git 1.8.4.1 をインストールしたら、無事エラーが出なくなりました。&lt;/p&gt;

&lt;p&gt;Git のソースインストール方法手順は以下。いつもの Configure -&amp;gt; make -&amp;gt; make install です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/local/src
wget https://git-core.googlecode.com/files/git-1.8.4.1.tar.gz
tar zxvf git-1.8.4.1.tar.gz
cd git-1.8.4.1
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なお、この場合 Git のバイナリが &lt;code&gt;/usr/local/bin&lt;/code&gt; 配下にインストールされるので、&amp;#8221;Jenkins の管理 &amp;gt; システム設定 &amp;gt; Git &amp;gt; Path to Git executable&amp;#8221; に &lt;code&gt;/usr/local/bin/git&lt;/code&gt; と入力する必要があります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_81.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_81.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_secure_credientials_81-255x300.png&#34; alt=&#34;jenkins_secure_credientials_8&#34; width=&#34;255&#34; height=&#34;300&#34; class=&#34;alignnone size-medium wp-image-1649&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考:094599a56af5c07d8e54136f1f310fd1&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin&#39;, &#39;Git Plugin &amp;#8211; Jenkins &amp;#8211; Jenkins Wiki&#39;]);&#34; &gt;Git Plugin &amp;#8211; Jenkins &amp;#8211; Jenkins Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/naonya3/items/54c8e3436212ad6686b3&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://qiita.com/naonya3/items/54c8e3436212ad6686b3&#39;, &#39;CentOS6.3にgitをソースコードから入れる &amp;#8211; Qiita [キータ]&#39;]);&#34; &gt;CentOS6.3にgitをソースコードから入れる &amp;#8211; Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>git の submodule を最新にする方法</title>
      <link>http://1000k.github.io/2013/10/19/command-to-update-git-submodule/</link>
      <pubDate>Sat, 19 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/10/19/command-to-update-git-submodule/</guid>
      <description>

&lt;p&gt;「そんなの &lt;code&gt;git submodule update&lt;/code&gt; で一発だろ」と思っていましたが、全然違いました。このコマンドをいくら叩いても、標準出力には何も表示されず、submodule はちっとも更新されません。&lt;/p&gt;

&lt;p&gt;submodule を最新の状態にするコマンドは &lt;code&gt;git submodule foreach git pull origin master&lt;/code&gt; です。&lt;/p&gt;

&lt;h2 id=&#34;参考:e45e994ba8135917364d3e9a430429e3&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/5828324/update-git-submodule&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://stackoverflow.com/questions/5828324/update-git-submodule&#39;, &#39;Update git submodule &amp;#8211; Stack Overflow&#39;]);&#34; &gt;Update git submodule &amp;#8211; Stack Overflow&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>grunt watch が遅い時の改善方法</title>
      <link>http://1000k.github.io/2013/10/20/speed-up-grunt-watch/</link>
      <pubDate>Sat, 19 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/10/20/speed-up-grunt-watch/</guid>
      <description>

&lt;p&gt;Grunt を使うからには &lt;a href=&#34;https://github.com/gruntjs/grunt-contrib-watch#optionsnospawn&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;https://github.com/gruntjs/grunt-contrib-watch#optionsnospawn&#39;, &#39;grunt-contrib-watch&#39;]);&#34; &gt;grunt-contrib-watch&lt;/a&gt; でファイルの変更を監視して自動ビルドしたいのですが、どうも遅い。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ grunt watch

Running &amp;quot;watch&amp;quot; task
Waiting...OK
&amp;gt;&amp;gt; File &amp;quot;src/sass/screen.scss&amp;quot; changed.

Running &amp;quot;compass:dist&amp;quot; (compass) task
overwrite app/css/screen.css (0.333s)
Compilation took 0.342s

Running &amp;quot;cssmin:add_banner&amp;quot; (cssmin) task
File app/css/screen.min.css created.

Running &amp;quot;cssmin:minify&amp;quot; (cssmin) task
File app/css/app.min.css created.
File app/css/screen.min.css created.

Done, without errors.
Completed in 12.602s at Sat Oct 19 2013 16:26:32 GMT+0000 (UTC) - Waiting...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;タスクの実行自体は1秒もかかっていないのに、全体では12秒ほどかかっていました。&lt;/p&gt;

&lt;p&gt;Gruntfile の設定を見直すことで改善できたので、そのやり方をメモしておきます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;grunt watch&lt;/code&gt; のボトルネックは、ファイルの変更を検知後にタスクプロセスを子プロセスとしてスポーンさせる部分にあるようです。&lt;/p&gt;

&lt;p&gt;したがって、子プロセスとしてタスクを起動するオプションを無効にすることで回避できます。&lt;/p&gt;

&lt;p&gt;以下のように、Gruntfile.js 内で &lt;code&gt;spawn: false&lt;/code&gt; を指定してやれば OK です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module.exports = function(grunt) {
  grunt.initConfig({
    // ...
    watch: {
      options: {
        spawn: false
      },
      css: {
        files: [&#39;src/sass/*.scss&#39;],
        tasks: [&#39;compass&#39;, &#39;cssmin&#39;]
      }
    }
  });
  // ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで大幅にスピードが改善されました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ grunt watch

Running &amp;quot;watch&amp;quot; task
Waiting...OK
&amp;gt;&amp;gt; File &amp;quot;src/sass/screen.scss&amp;quot; changed.


Running &amp;quot;compass:dist&amp;quot; (compass) task
identical app/css/screen.css (0.319s)
Compilation took 0.328s

Running &amp;quot;cssmin:add_banner&amp;quot; (cssmin) task
File app/css/screen.min.css created.

Running &amp;quot;cssmin:minify&amp;quot; (cssmin) task
File app/css/app.min.css created.
File app/css/screen.min.css created.

Running &amp;quot;watch&amp;quot; task
Completed in 0.712s at Sat Oct 19 2013 16:27:58 GMT+0000 (UTC) - Waiting...
OK
&amp;gt;&amp;gt; File &amp;quot;src/sass/screen.scss&amp;quot; changed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;12秒が0.7秒に。イェーイ！&lt;/p&gt;

&lt;h2 id=&#34;参考:bcbef8a25879c17668c0f2da3a272309&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gruntjs/grunt-contrib-watch/issues/69&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;https://github.com/gruntjs/grunt-contrib-watch/issues/69&#39;, &#39;Why Watch is so slow compared to Regarde · Issue #69 · gruntjs/grunt-contrib-watch&#39;]);&#34; &gt;Why Watch is so slow compared to Regarde · Issue #69 · gruntjs/grunt-contrib-watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gruntjs/grunt-contrib-watch#optionsnospawn&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;https://github.com/gruntjs/grunt-contrib-watch#optionsnospawn&#39;, &#39;gruntjs/grunt-contrib-watch#optionsnospawn&#39;]);&#34; &gt;gruntjs/grunt-contrib-watch#optionsnospawn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>init.dスクリプトが存在するのに「そのようなファイルやディレクトリはありません」と言われた</title>
      <link>http://1000k.github.io/2013/10/01/no-file-or-directory-is-found-but-init-d-script-exists/</link>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/10/01/no-file-or-directory-is-found-but-init-d-script-exists/</guid>
      <description>

&lt;p&gt;CentOS 6.4 でとある init.d スクリプトを実行したら以下のようなエラーが出ました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# service mysql_master
env: /etc/init.d/mysql_master: そのようなファイルやディレクトリはありません
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;いえ、何度確認してもそのファイルは確かに存在しています。&lt;/p&gt;

&lt;p&gt;ファイルの中身を見ても何も異常が見つかりません。&lt;/p&gt;

&lt;p&gt;グーグル先生に道を伺ったところ、「改行コードがLFじゃないから」とのこと。&lt;/p&gt;

&lt;p&gt;さっそく改行コードを確認したところ CR+LF でした。&lt;/p&gt;

&lt;p&gt;Vim で以下のコマンドを実行したら、正しく実行されるようになりました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:set ff=unix
:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# service mysql_master
Usage: /etc/init.d/mysql_master {start|stop|restart|status}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考:78516bd3eda8050d97cd4c550e13df69&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.linuxquestions.org/questions/red-hat-31/init-d-script-error-bad-interpreter-204902/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.linuxquestions.org/questions/red-hat-31/init-d-script-error-bad-interpreter-204902/&#39;, &#39;init.d script error bad interpreter&#39;]);&#34; &gt;init.d script error bad interpreter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/82726/convert-dos-line-endings-to-linux-line-endings-in-vim&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://stackoverflow.com/questions/82726/convert-dos-line-endings-to-linux-line-endings-in-vim&#39;, &#39;Convert DOS line endings to Linux line endings in vim &amp;#8211; Stack Overflow&#39;]);&#34; &gt;Convert DOS line endings to Linux line endings in vim &amp;#8211; Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Adobe Photoshop CCのUIを英語にする方法</title>
      <link>http://1000k.github.io/2013/09/10/how-to-change-ui-language-to-eignlish-of-photoshop-cc/</link>
      <pubDate>Tue, 10 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/09/10/how-to-change-ui-language-to-eignlish-of-photoshop-cc/</guid>
      <description>

&lt;p&gt;英語サイトからカスタムアクションをダウンロードして使おうとしたものの、レイヤー名が日本語なせいで、英語版のレイヤー名を前提としたアクションが途中で止まってしまいます。&lt;/p&gt;

&lt;p&gt;Photoshop を英語版で動かすようにしたら使えるようになったのですが、そのやり方が直感的ではありませんでした。メモしておきます。&lt;/p&gt;

&lt;p&gt;なお、使用バージョンは Adobe Photoshop CC (version 14.0) です。&lt;/p&gt;

&lt;p&gt;まず、Photoshop を開いている場合は終了します。&lt;/p&gt;

&lt;p&gt;次に、&lt;code&gt;{Photoshop のインストールディレクトリ}/Locales/ja_JP/Support Files&lt;/code&gt; の中にある &lt;code&gt;tw10428.dat&lt;/code&gt; というファイルを、&lt;code&gt;tw10428.dat.bak&lt;/code&gt; にリネームします。&lt;/p&gt;

&lt;p&gt;Windows 7 のデフォルトでは &lt;code&gt;C:\Program Files\Adobe\Adobe Photoshop CC (64 Bit)\Locales\ja_JP\Support Files&lt;/code&gt; の中にありました。&lt;/p&gt;

&lt;p&gt;これで Photoshop を再起動すれば、UI が英語になっています。&lt;/p&gt;

&lt;p&gt;高いアドビ税払ってるんだから、このへんのローカリゼーションはちゃんとやってほしいですね。せめて UI の言語ぐらいオプションから設定させてほしいです。（一応 &amp;#8220;編集 &amp;gt; 環境設定 &amp;gt; インターフェース&amp;#8221;）の中に言語を選ぶセレクトボックスはありますが、日本語しか選べません。じゃあ置くなよ。）&lt;/p&gt;

&lt;h2 id=&#34;参考:39e92141fb766995ade2d8a4ea832417&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=3I8B8QH5uRE&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.youtube.com/watch?v=3I8B8QH5uRE&#39;, &#39;HOW TO CHANGE LANGUAGE IN PHOTOSHOP [Works with (CC, Win, Mac)] &amp;#8211; YouTube&#39;]);&#34; &gt;HOW TO CHANGE LANGUAGE IN PHOTOSHOP [Works with (CC, Win, Mac)] &amp;#8211; YouTube&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bundle installが遅すぎたのでsourceを変えた</title>
      <link>http://1000k.github.io/2013/08/27/change-source-because-bundle-install-is-too-slow/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/08/27/change-source-because-bundle-install-is-too-slow/</guid>
      <description>

&lt;p&gt;Rails 4 アプリを作ろうとして &lt;code&gt;rails new&lt;/code&gt; コマンドを叩いたら、&lt;code&gt;bundle install&lt;/code&gt; のフェーズが永遠に終わらず老人になりそうでした。&lt;/p&gt;

&lt;p&gt;どうやら gem リポジトリの &lt;a href=&#34;http://rubygems.org&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://rubygems.org&#39;, &#39;http://rubygems.org&#39;]);&#34; &gt;&lt;a href=&#34;http://rubygems.org&#34;&gt;http://rubygems.org&lt;/a&gt;&lt;/a&gt; のレスポンスが遅すぎるようです。&lt;/p&gt;

&lt;p&gt;そこで、Rails アプリの作成時は &lt;code&gt;bundler install&lt;/code&gt; を省略し、Gemfile をいじってもっと早いリポジトリを参照するように変更したら、無事インストールできました。&lt;/p&gt;

&lt;h2 id=&#34;具体的な手順:52707943b292ea793cda924d2a6b7275&#34;&gt;具体的な手順&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ rails new mojamoja --skip-bundle
$ cd mojamoja
$ vim Gemfile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt; の1行目を以下のように変更する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# source &#39;http://rubygems.org&#39;
source &amp;quot;http://bundler-api.herokuapp.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでインストールできるようになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bundle install
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2013-09-01-追加-rhel-centos-6-x-特有のバグ:52707943b292ea793cda924d2a6b7275&#34;&gt;(2013-09-01 追加) RHEL/CentOS 6.x 特有のバグ&lt;/h2&gt;

&lt;p&gt;RHEL/CentOS 6.x を使っている場合、ネットワークの解決が異常に遅くなることがあります。&lt;code&gt;/etc/resolve.conf&lt;/code&gt; に以下の1行を追加すると解決するようです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;options single-request-reopen
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考:52707943b292ea793cda924d2a6b7275&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/quattro_4/items/fcc2ff8b04c43229a2fb&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://qiita.com/quattro_4/items/fcc2ff8b04c43229a2fb&#39;, &#39;Ruby &amp;#8211; bundlerが遅い(Error Bundler::HTTPError)のを解決 &amp;#8211; Qiita [キータ]&#39;]);&#34; &gt;Ruby &amp;#8211; bundlerが遅い(Error Bundler::HTTPError)のを解決 &amp;#8211; Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ideaxidea.com/archives/2013/08/resolv.html&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.ideaxidea.com/archives/2013/08/resolv.html&#39;, &#39;Vagrant+VirtualBox（CentOS6）で「gem install rails」がすっごい遅い時の対処法 | IDEA*IDEA&#39;]);&#34; &gt;Vagrant+VirtualBox（CentOS6）で「gem install rails」がすっごい遅い時の対処法 | IDEA*IDEA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Subversion 1.7 で switch や merge ができないときの対処方法</title>
      <link>http://1000k.github.io/2013/07/25/what-to-do-if-you-can-not-switch-and-merge-in-subversion-17/</link>
      <pubDate>Thu, 25 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/07/25/what-to-do-if-you-can-not-switch-and-merge-in-subversion-17/</guid>
      <description>

&lt;p&gt;Subversion 1.7.10 をソースからインストールしたら、&lt;code&gt;svn switch&lt;/code&gt; や &lt;code&gt;svn merge&lt;/code&gt; が以下のエラーを吐いて失敗するようになってしまいました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# svn merge https://uso.com/svn/mojamoja/2.13.1
...
svn: E200007: Error running context
svn: E200007: Trying to use an unsupported feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;直し方をメモしておきます。&lt;/p&gt;

&lt;h2 id=&#34;原因:b3d12b85aa6526b84cee44966cb0c763&#34;&gt;原因&lt;/h2&gt;

&lt;p&gt;Subversion は内部の HTTP/HTTPS クライアントとして serf または neon を使います。Configure オプションを特に指定しない場合は serf が使われるようですが、これに不具合があったようです。&lt;/p&gt;

&lt;p&gt;何も configure オプションを指定せずにインストールした場合、&lt;code&gt;svn --version&lt;/code&gt; を実行すると下記の通り出力されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# svn --version
svn, version 1.7.10 (r1485443)
   compiled Jul 24 2013, 16:16:57
...
* ra_serf : Module for accessing a repository via WebDAV protocol using serf.
  - handles &#39;http&#39; scheme
  - handles &#39;https&#39; scheme
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「serf が http と https をハンドルするぜ」と書いていますが、実際には E200007 エラーを吐いて止まります。&lt;/p&gt;

&lt;h2 id=&#34;対策:b3d12b85aa6526b84cee44966cb0c763&#34;&gt;対策&lt;/h2&gt;

&lt;p&gt;もう一つの選択肢である neon を使うようにしたら、問題なく動作するようになりました。&lt;/p&gt;

&lt;p&gt;再コンパイル手順は以下のとおりです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd subversion-1.7.10/

// 依存しているパッケージをダウンロードしてくれる便利なスクリプト。
# ./get-deps.sh

// neon をコンパイルしてインストールする。
// (CentOS なら `yum install neon neon-devel` でも OK)
// `--with-ssl` を忘れずに！
# cd neon/
# ./configure --with-ssl
# make &amp;amp;#038;&amp;amp;#038; make install

// Subversion をインストールする。
# cd ../
# make distclean
# ./configure \
  --without-berkeley-db \
  --with-neon \
  --with-ssl
# make &amp;amp;#038;&amp;amp;#038; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;正しくインストールできると、以下のように &lt;code&gt;ra_neon&lt;/code&gt; という表示が出ます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# svn --version
...
* ra_neon : Module for accessing a repository via WebDAV protocol using Neon.
  - handles &#39;http&#39; scheme
  - handles &#39;https&#39; scheme
* ra_svn : Module for accessing a repository using the svn network protocol.
  - handles &#39;svn&#39; scheme
* ra_local : Module for accessing a repository on local disk.
  - handles &#39;file&#39; scheme
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;handles &#39;https&#39; scheme&lt;/code&gt; と出力されない時は、&lt;code&gt;--with-ssl&lt;/code&gt; を付け忘れています。それでは https 通信ができないので、再コンパイルしてください。&lt;/p&gt;

&lt;h2 id=&#34;余談:b3d12b85aa6526b84cee44966cb0c763&#34;&gt;余談&lt;/h2&gt;

&lt;p&gt;今回とは逆で、「neon だとエラーになるが serf なら大丈夫だった」という事例もありました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://masutaka.net/chalow/2009-06-15-1.html&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://masutaka.net/chalow/2009-06-15-1.html&#39;, &#39;Debian squeeze の subversion で http リポジトリにアクセスできなくなった / マスタカの ChangeLog メモ&#39;]);&#34; &gt;Debian squeeze の subversion で http リポジトリにアクセスできなくなった / マスタカの ChangeLog メモ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;バージョンアップのたびに不具合が入れ替わるんでしょうか。&lt;/p&gt;

&lt;p&gt;奇妙です。&lt;/p&gt;

&lt;h2 id=&#34;参考:b3d12b85aa6526b84cee44966cb0c763&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.iss.ms/2009/04/12/141537&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.iss.ms/2009/04/12/141537&#39;, &#39;[memo][svn] svnクライアントにSSLをサポートさせる « いわぶろ（ろてん）&#39;]);&#34; &gt;[memo][svn] svnクライアントにSSLをサポートさせる « いわぶろ（ろてん）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.r-unit.co.jp/archives/726&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.r-unit.co.jp/archives/726&#39;, &#39;はだかの隊長日記 » Subversionコンパイル方法&#39;]);&#34; &gt;はだかの隊長日記 » Subversionコンパイル方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://masutaka.net/chalow/2009-06-15-1.html&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://masutaka.net/chalow/2009-06-15-1.html&#39;, &#39;Debian squeeze の subversion で http リポジトリにアクセスできなくなった / マスタカの ChangeLog メモ&#39;]);&#34; &gt;Debian squeeze の subversion で http リポジトリにアクセスできなくなった / マスタカの ChangeLog メモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Chef Server が FQDN を取得できない時の対処法</title>
      <link>http://1000k.github.io/2013/07/05/chef-server-cannot-get-fqdn/</link>
      <pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/07/05/chef-server-cannot-get-fqdn/</guid>
      <description>

&lt;p&gt;どういうわけか会社で使っている Chef Server で &lt;code&gt;knife bootstrap&lt;/code&gt; した後、FQDN が空になっているノードがありました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@chefserver-vm ~]# knife node show mojamoja-vm
Node Name:   mojamoja-vm
Environment: _default
FQDN:
IP:          172.16.83.86
Run List:    recipe[common], role[web]
Roles:       web
Recipes:     common, apache2, php
Platform:    centos 6.3
Tags:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これのせいで &lt;code&gt;knife search&lt;/code&gt; など使う時に大変不便でした。&lt;/p&gt;

&lt;p&gt;対処方法をメモしておきます。&lt;/p&gt;

&lt;h2 id=&#34;原因:1e58b670181ec322a9159a897b06acb1&#34;&gt;原因&lt;/h2&gt;

&lt;p&gt;クライアント側サーバーの /etc/hosts で自分の IP と hostname を定義していなかったためでした。&lt;/p&gt;

&lt;p&gt;この状態だと、クライアント側で &lt;code&gt;hostname -A&lt;/code&gt; を叩いても空の文字列が返ってきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@mojamoja-vm ~]# hostname -A

(↑空)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ohai コマンドを叩いても、やはり FQDN は取得できません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ohai | grep fqdn

(↑空)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;対処法:1e58b670181ec322a9159a897b06acb1&#34;&gt;対処法&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/etc/hosts&lt;/code&gt; に IP と hostname の対を追加してやります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;172.16.83.86    mojamoja-vm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで FQDN が取得できるようになりました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@mojamoja-vm ~]# hostname -A
mojamoja-vm

[root@mojamoja-vm ~]# ohai | grep fqdn
  &amp;quot;fqdn&amp;quot;: &amp;quot;mojamoja-vm&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;サーバー側からも FQDN が取得できています。&lt;/p&gt;

&lt;p&gt;※FQDN をサーバーに反映するために、クライアント側で一度 &lt;code&gt;chef-client&lt;/code&gt; を叩く必要があるようです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@chefserver-vm ~]# knife node show mojamoja-vm
Node Name:   mojamoja-vm
Environment: _default
FQDN:        mojamoja-vm
IP:          172.16.83.86
Run List:    recipe[common], role[web]
Roles:       web
Recipes:     common, apache2, php
Platform:    centos 6.3
Tags:
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考:1e58b670181ec322a9159a897b06acb1&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://serverfault.com/questions/331936/setting-the-hostname-fqdn-or-short-name&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://serverfault.com/questions/331936/setting-the-hostname-fqdn-or-short-name&#39;, &#39;Setting the hostname: FQDN or short name? &amp;#8211; Server Fault&#39;]);&#34; &gt;Setting the hostname: FQDN or short name? &amp;#8211; Server Fault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sharadchhetri.com/2012/12/23/change-hostname-fqdn-centos-redhat/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://sharadchhetri.com/2012/12/23/change-hostname-fqdn-centos-redhat/&#39;, &#39;How to change hostname or FQDN in CentOS and Redhat&#39;]);&#34; &gt;How to change hostname or FQDN in CentOS and Redhat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;photo by: &lt;a href=&#34;http://www.flickr.com/photos/manoelpetry/5334219183/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.flickr.com/photos/manoelpetry/5334219183/&#39;, &#39;Chef Mauro Sousa e Sous Chef Valdir Ramos by manoel petry, on Flickr&#39;]);&#34; &gt;Chef Mauro Sousa e Sous Chef Valdir Ramos by manoel petry, on Flickr&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>jenkins ユーザーが ant を実行できないときの対処法</title>
      <link>http://1000k.github.io/2013/07/02/jenkins-user-cannot-run-ant/</link>
      <pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/07/02/jenkins-user-cannot-run-ant/</guid>
      <description>

&lt;p&gt;CentOS 6.3 にて、&lt;a href=&#34;http://jenkins-php.org/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://jenkins-php.org/&#39;, &#39;Template for Jenkins Jobs for PHP Projects&#39;]);&#34; &gt;Template for Jenkins Jobs for PHP Projects&lt;/a&gt; にある ant タスク (build.xml) 通りに PHPUnit タスクを実行しようとしたら、エラーが出てしまいました。&lt;/p&gt;

&lt;p&gt;かなり長時間ハマったのでメモを残しておきます。&lt;/p&gt;

&lt;h2 id=&#34;症状:135291858de89f6329950b22fca515d3&#34;&gt;症状&lt;/h2&gt;

&lt;p&gt;CentOS 6.3 にて、&lt;a href=&#34;http://jenkins-php.org/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://jenkins-php.org/&#39;, &#39;Template for Jenkins Jobs for PHP Projects&#39;]);&#34; &gt;Template for Jenkins Jobs for PHP Projects&lt;/a&gt; にある以下のタスクを実行するとエラーが出ました。&lt;code&gt;
 &amp;lt;target name=&amp;quot;phpunit&amp;quot; description=&amp;quot;Run unit tests using PHPUnit and generates junit.xml and clover.xml&amp;quot;&amp;gt; &amp;lt;exec executable=&amp;quot;phpunit&amp;quot; failonerror=&amp;quot;true&amp;quot;/&amp;gt; &amp;lt;/target&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;エラーメッセージ:&lt;code&gt;
 # sudo -u jenkins ant ... phpunit: BUILD FAILED /var/lib/jenkins/jobs/mojamoja-unit-testing/workspace/build.xml:22: Execute failed: java.io.IOException: Cannot run program &amp;quot;phpunit&amp;quot;: error=2, No such file or directory Total time: 0 seconds&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;原因:135291858de89f6329950b22fca515d3&#34;&gt;原因&lt;/h2&gt;

&lt;p&gt;どうやら phpunit へのパスが通っていないようです。&lt;/p&gt;

&lt;p&gt;phpunit の実体は &lt;code&gt;/usr/local/bin/phpunit&lt;/code&gt; なのですが、jenkins ユーザーがこの PATH を参照できていない模様。&lt;/p&gt;

&lt;h2 id=&#34;試行錯誤:135291858de89f6329950b22fca515d3&#34;&gt;試行錯誤&lt;/h2&gt;

&lt;p&gt;まず、jenkins ユーザーの &lt;code&gt;~/.bash_profile&lt;/code&gt; と &lt;code&gt;~/.bashrc&lt;/code&gt; を以下の内容で作成してもダメでした。PATH は反映されません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
export PATH=$PATH:/usr/local/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また、下記のように ant タスク内で PATH を変更するシェルを走らせてもダメでした。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;amp;lt;target name=&amp;quot;setenv&amp;quot;&amp;gt;
   &amp;amp;lt;exec executable=&amp;quot;/bin/sh&amp;quot;&amp;gt;
     &amp;amp;lt;arg line=&amp;quot;./setenv.sh&amp;quot;/&amp;gt;
   &amp;amp;lt;/exec&amp;gt;
 &amp;amp;lt;/target&amp;gt;

 &amp;amp;lt;target name=&amp;quot;env&amp;quot;&amp;gt;&amp;amp;lt;exec executable=&amp;quot;env&amp;quot; /&amp;gt;&amp;amp;lt;/target&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;setenv.sh の中身は下記。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
export PATH=${PATH}:/usr/local/bin
echo $PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで ant を実行すると、&lt;code&gt;setenv&lt;/code&gt; タスクの時点では PATH は変更されていますが、次に実行される &lt;code&gt;env&lt;/code&gt; タスクで元に戻ってしまっています。まるで setenv と env が別々のプロセスで動いているように見えます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Buildfile: build.xml

setenv:
     [exec] /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin

env:
     [exec] HOSTNAME=mojamoja
     [exec] SHELL=/bin/bash
     [exec] TERM=xterm
     [exec] HISTSIZE=1000
     [exec] USER=jenkins
     ...
     [exec] PATH=/sbin:/bin:/usr/sbin:/usr/bin      &amp;amp;lt;- /usr/local/bin が追加されていない
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とういわけで、setenv で環境変数をセットする方法はボツでした。&lt;/p&gt;

&lt;h2 id=&#34;解決方法:135291858de89f6329950b22fca515d3&#34;&gt;解決方法&lt;/h2&gt;

&lt;h3 id=&#34;1-jenkins-のグローバルプロパティを設定する:135291858de89f6329950b22fca515d3&#34;&gt;1. Jenkins のグローバルプロパティを設定する&lt;/h3&gt;

&lt;p&gt;Jenkins から環境変数を上書きすることで、PATH を追加することができます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Jenkinsの管理 &amp;gt; システムの設定 &amp;gt; グローバルプロパティ &amp;gt; 環境変数&lt;/code&gt; にて、以下のように設定します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_global_property.png&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://blog.1000k.net/wp-content/uploads/jenkins_global_property.png&#39;, &#39;&#39;]);&#34; &gt;&lt;img src=&#34;http://blog.1000k.net/wp-content/uploads/jenkins_global_property-300x191.png&#34; alt=&#34;Jenkins グローバルプロパティ&#34; width=&#34;300&#34; height=&#34;191&#34; class=&#34;alignnone size-medium wp-image-1507&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;キー: &lt;code&gt;PATH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;値: &lt;code&gt;${PATH}:/usr/local/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ただし、この方法だと Jenkins から Ant を実行した時しか PATH は上書きされません。&lt;/p&gt;

&lt;h3 id=&#34;2-sudoers-の-secure-path-を無効にする:135291858de89f6329950b22fca515d3&#34;&gt;2. sudoers の secure_path を無効にする&lt;/h3&gt;

&lt;p&gt;Fedora 系では sudo ユーザー向けの PATH が &lt;code&gt;/sbin:/bin:/usr/sbin:/usr/bin&lt;/code&gt; のみに制限されているので、これを外してやります。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;visudo&lt;/code&gt; コマンドを実行して、以下のように書き直します。&lt;code&gt;
 # secure\_path をコメントアウト # Defaults secure\_path = /sbin:/bin:/usr/sbin:/usr/bin # env\_keep に PATH を追加 Defaults env\_keep += &amp;quot;PATH&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これで secure_path の縛りが解除されました。&lt;/p&gt;

&lt;p&gt;sudoers の環境変数は `sudo -l` で確認できます。&lt;code&gt;
 # sudo -l Matching Defaults entries for root on this host: !visiblepw, always\_set\_home, env\_reset, env\_keep=&amp;quot;COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS\_COLORS&amp;quot;, env\_keep+=&amp;quot;MAIL PS1 PS2 QTDIR USERNAME LANG LC\_ADDRESS LC\_CTYPE&amp;quot;, env\_keep+=&amp;quot;LC\_COLLATE LC\_IDENTIFICATION LC\_MEASUREMENT LC\_MESSAGES&amp;quot;, env\_keep+=&amp;quot;LC\_MONETARY LC\_NAME LC\_NUMERIC LC\_PAPER LC\_TELEPHONE&amp;quot;, env\_keep+=&amp;quot;LC\_TIME LC\_ALL LANGUAGE LINGUAS \_XKB\_CHARSET XAUTHORITY&amp;quot;, env_keep+=PATH User root may run the following commands on this host: (ALL) ALL&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考:135291858de89f6329950b22fca515d3&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://deginzabi163.wordpress.com/2011/04/23/%E8%A6%9A%E6%9B%B8fedora-14%E3%81%AEsudo%E3%81%8Cpath%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%82%92%E6%BD%B0%E3%81%99%E3%81%AE%E3%81%8C%E9%AC%B1%E9%99%B6%E3%81%97%E3%81%84%EF%BC%86%E5%AF%BE%E7%AD%96/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://deginzabi163.wordpress.com/2011/04/23/%E8%A6%9A%E6%9B%B8fedora-14%E3%81%AEsudo%E3%81%8Cpath%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%82%92%E6%BD%B0%E3%81%99%E3%81%AE%E3%81%8C%E9%AC%B1%E9%99%B6%E3%81%97%E3%81%84%EF%BC%86%E5%AF%BE%E7%AD%96/&#39;, &#39;[覚書]Fedora 14のsudoでPATHがアレで鬱陶しい＆対策 | Deginzabi163\&#39;s Blog&#39;]);&#34; &gt;[覚書]Fedora 14のsudoでPATHがアレで鬱陶しい＆対策 | Deginzabi163&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fishrimper.blogspot.jp/2012/12/sudo-path.html&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://fishrimper.blogspot.jp/2012/12/sudo-path.html&#39;, &#39;IT とかその他もろもろ: sudo した時の PATH&#39;]);&#34; &gt;IT とかその他もろもろ: sudo した時の PATH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://superuser.com/questions/98686/passing-path-through-sudo&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://superuser.com/questions/98686/passing-path-through-sudo&#39;, &#39;linux - Passing PATH through sudo - Super User&#39;]);&#34; &gt;linux - Passing PATH through sudo - Super User&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Xdebug 使用時に var_dump の出力が省略されないようにする</title>
      <link>http://1000k.github.io/2013/04/27/suppress-omitting-var-dump-output-of-xdebug/</link>
      <pubDate>Sat, 27 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/04/27/suppress-omitting-var-dump-output-of-xdebug/</guid>
      <description>

&lt;p&gt;Xdebug をインストールしていると、var_dump() した変数が全て表示されずに省略されてしまうことがあります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array(1187) {
  [0] =&amp;gt;
  string(19) &amp;quot;ALICE IN WONDERLAND&amp;quot;
  :
  :
  [127] =&amp;gt;
  string(4) &amp;quot;OLEO&amp;quot;

  (more elements)...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;全て表示するには、&lt;code&gt;/etc/php.ini&lt;/code&gt; に以下の行を追加すれば OK です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;; 表示する子要素の最大数 (default: 128)
xdebug.var_display_max_children = -1

; 表示する要素の最大数 (default: 512)
xdebug.var_display_max_data = -1

; 表示する最大の階層 (default: 3)
xdebug.var_display_max_depth = -1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考:4a6779c3da90459c9dffed130ddd9ac1&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://xdebug.org/docs/all_settings#var_display_max_depth&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://xdebug.org/docs/all_settings#var_display_max_depth&#39;, &#39;Xdebug: Documentation&#39;]);&#34; &gt;Xdebug: Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kantenna.com/info/2012/02/xdebug_vardump.php&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.kantenna.com/info/2012/02/xdebug_vardump.php&#39;, &#39;[PHP]Xdebugでvar_dump()の出力が省略されて困る場合の対応 | 情報備忘録&#39;]);&#34; &gt;[PHP]Xdebugでvar_dump()の出力が省略されて困る場合の対応 | 情報備忘録&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.crossl.net/blog/php_xdebug_vardump_size/&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://www.crossl.net/blog/php_xdebug_vardump_size/&#39;, &#39;PHPでvar_dump時に数が多いと省略されてしまう現象&#39;]);&#34; &gt;PHPでvar_dump時に数が多いと省略されてしまう現象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MariaDB 10.0.1 で日本語が文字化けしないようにする</title>
      <link>http://1000k.github.io/2013/04/14/avoid-garbled-japanese-in-mariadb-10-0-1/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/04/14/avoid-garbled-japanese-in-mariadb-10-0-1/</guid>
      <description>

&lt;p&gt;MariaDB 10.0.1 で確認しました。&lt;/p&gt;

&lt;p&gt;MySQL 同様、MariaDB はデフォルトの文字セットが latin1 になっているので、日本語をそのまま格納して表示しようとすると文字化けします。&lt;/p&gt;

&lt;p&gt;日本語を利用可能にするためには、&lt;code&gt;/etc/my.cnf.d/server.cnf&lt;/code&gt; に以下の行を追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[mysqld]
character-set-server = utf8
collation-server     = utf8_general_ci
skip-character-set-client-handshake
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで MariaDB の再起動後、日本語が正しく出力されるようになっています。&lt;/p&gt;

&lt;h2 id=&#34;参考:b525f416a269d7b3c0781ad579245a90&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ozamasa.naganoblog.jp/e1194854.html&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://ozamasa.naganoblog.jp/e1194854.html&#39;, &#39;(・∀・) ozamasa:MacのMySQLを5.5から5.6にバージョンアップしたときのメモ。&#39;]);&#34; &gt;(・∀・) ozamasa:MacのMySQLを5.5から5.6にバージョンアップしたときのメモ。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>git clone した後 git sudmobule init が失敗するときの対処方法</title>
      <link>http://1000k.github.io/2013/03/27/what-to-do-if-git-sudmobule-init-fails-after-git-clone/</link>
      <pubDate>Wed, 27 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/03/27/what-to-do-if-git-sudmobule-init-fails-after-git-clone/</guid>
      <description>

&lt;p&gt;submodule を含むリポジトリを clone した直後は、ディレクトリは存在しますが実ファイルが存在しません。以下のコマンドで初期化する必要があります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git://mojamoja/uso.git
$ cd uso/
$ git submodule init
$ git submodule update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで実ファイルがローカルにダウンロードされます。&lt;/p&gt;

&lt;p&gt;&amp;#8230;らしいですが、うまくいきませんでした。&lt;/p&gt;

&lt;p&gt;私の場合、&amp;#8221;git submodule init&amp;#8221; を叩いたら以下のエラーが出ました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;No submodule mapping found in .gitmodules for path &#39;chef-repo/cookbooks/ant&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原因はプロジェクト内の .gitmodules にありました。&lt;/p&gt;

&lt;p&gt;Windows で &amp;#8220;git submodule add&amp;#8221; した時に一部の path が &amp;#8220;&amp;#92;&amp;#8221; という表記になっており、これを git がうまく解釈できなかった模様。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[submodule &amp;quot;chef-repo\\cookbooks\\java&amp;quot;]
     path = chef-repo\\cookbooks\\java
     url = git://github.com/opscode-cookbooks/java.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;#8220;&amp;#92;&amp;#8221; を &amp;#8220;/&amp;#8221; に置換してやればOKです。&lt;code&gt;
 [submodule &amp;quot;chef-repo/cookbooks/ava&amp;quot;] path = chef-repo/cookbooks/java url = git://github.com/opscode-cookbooks/java.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これで &amp;#8220;git sudmoule init&amp;#8221; が成功するようになりました。&lt;/p&gt;

&lt;h2 id=&#34;参考:4471c99086089d3b3bb5481282090f4e&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://edspencer.net/2008/04/git-clone-vs-git-submodule.html&#34; onclick=&#34;_gaq.push([&#39;_trackEvent&#39;, &#39;outbound-article&#39;, &#39;http://edspencer.net/2008/04/git-clone-vs-git-submodule.html&#39;, &#39;Git clone vs Git submodule : Ed Spencer&#39;]);&#34; &gt;Git clone vs Git submodule : Ed Spencer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>